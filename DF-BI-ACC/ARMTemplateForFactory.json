{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DF-BI-ACC"
		},
		"BlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BlobStorage'"
		},
		"LS_Datalake2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Datalake2'"
		},
		"ls_SQLServer_Exact_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_SQLServer_Exact'"
		},
		"ls_SQLServer_Exact_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_SQLServer_Exact'"
		},
		"ls_SQLServer_Hix_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_SQLServer_Hix'"
		},
		"ls_SQLServer_Hix_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_SQLServer_Hix'"
		},
		"ls_SQLServer_az_bi_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_SQLServer_az_bi'"
		},
		"AzureKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://KV-DatafactoryBI.vault.azure.net/"
		},
		"HttpServer_Afas_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://68619.rest.afas.online/ProfitRestServices/connectors/"
		},
		"LS_Datalake2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bipowerstorage2.dfs.core.windows.net"
		},
		"ls_SQLServer_Exact_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "gkld\\svc-azure-ls-exact"
		},
		"ls_SQLServer_Hix_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "gkld\\svc-azure-ls-hix"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Personeel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Vult het personeelsmodel",
				"activities": [
					{
						"name": "STG_AFAS_Medewerkers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "BI_Power_Medewerkers"
							},
							{
								"name": "Destination",
								"value": "personeel/dim/medewerker"
							}
						],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Medewerker']"
										},
										"sink": {
											"name": "Medewerker"
										}
									},
									{
										"source": {
											"path": "[['Roepnaam']"
										},
										"sink": {
											"name": "Roepnaam"
										}
									},
									{
										"source": {
											"path": "[['Voornaam']"
										},
										"sink": {
											"name": "Voornaam"
										}
									},
									{
										"source": {
											"path": "[['Voorletters']"
										},
										"sink": {
											"name": "Voorletters"
										}
									},
									{
										"source": {
											"path": "[['Voorvoegsel']"
										},
										"sink": {
											"name": "Voorvoegsel",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Achternaam']"
										},
										"sink": {
											"name": "Achternaam"
										}
									},
									{
										"source": {
											"path": "[['Geboortenaam_apart_vastleggen']"
										},
										"sink": {
											"name": "Geboortenaam_apart_vastleggen"
										}
									},
									{
										"source": {
											"path": "[['Voorv_geb_naam']"
										},
										"sink": {
											"name": "Voorv_geb_naam",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Geboortenaam']"
										},
										"sink": {
											"name": "Geboortenaam"
										}
									},
									{
										"source": {
											"path": "[['Voorvoegsel_partner']"
										},
										"sink": {
											"name": "Voorvoegsel_partner"
										}
									},
									{
										"source": {
											"path": "[['Geb_naam_partner']"
										},
										"sink": {
											"name": "Geb_naam_partner"
										}
									},
									{
										"source": {
											"path": "[['Naamgebruik_code']"
										},
										"sink": {
											"name": "Naamgebruik_code"
										}
									},
									{
										"source": {
											"path": "[['Naamgebruik']"
										},
										"sink": {
											"name": "Naamgebruik"
										}
									},
									{
										"source": {
											"path": "[['Geslacht_code']"
										},
										"sink": {
											"name": "Geslacht_code"
										}
									},
									{
										"source": {
											"path": "[['Geslacht']"
										},
										"sink": {
											"name": "Geslacht"
										}
									},
									{
										"source": {
											"path": "[['Nationaliteit_code']"
										},
										"sink": {
											"name": "Nationaliteit_code"
										}
									},
									{
										"source": {
											"path": "[['Nationaliteit']"
										},
										"sink": {
											"name": "Nationaliteit"
										}
									},
									{
										"source": {
											"path": "[['Geboortedatum']"
										},
										"sink": {
											"name": "Geboortedatum"
										}
									},
									{
										"source": {
											"path": "[['Geboorteland']"
										},
										"sink": {
											"name": "Geboorteland"
										}
									},
									{
										"source": {
											"path": "[['Geboorteplaats']"
										},
										"sink": {
											"name": "Geboorteplaats"
										}
									},
									{
										"source": {
											"path": "[['BSN']"
										},
										"sink": {
											"name": "BSN"
										}
									},
									{
										"source": {
											"path": "[['Burgerlijke_staat_code']"
										},
										"sink": {
											"name": "Burgerlijke_staat_code"
										}
									},
									{
										"source": {
											"path": "[['Burgerlijke_staat']"
										},
										"sink": {
											"name": "Burgerlijke_staat"
										}
									},
									{
										"source": {
											"path": "[['Huwelijksdatum']"
										},
										"sink": {
											"name": "Huwelijksdatum"
										}
									},
									{
										"source": {
											"path": "[['Datum_scheiding']"
										},
										"sink": {
											"name": "Datum_scheiding",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Overlijdensdatum']"
										},
										"sink": {
											"name": "Overlijdensdatum",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Telefoonnr_prive']"
										},
										"sink": {
											"name": "Telefoonnr_prive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Mobiel_werk']"
										},
										"sink": {
											"name": "Mobiel_werk",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Mobiel_prive']"
										},
										"sink": {
											"name": "Mobiel_prive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['E-mail_prive']"
										},
										"sink": {
											"name": "E-mail_prive",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Achternaam__init_voorvoegsel__roepnaam_']"
										},
										"sink": {
											"name": "Achternaam__init_voorvoegsel__roepnaam_"
										}
									},
									{
										"source": {
											"path": "[['Straat']"
										},
										"sink": {
											"name": "Straat"
										}
									},
									{
										"source": {
											"path": "[['Huisnummer']"
										},
										"sink": {
											"name": "Huisnummer"
										}
									},
									{
										"source": {
											"path": "[['Toev_aan_huisnr']"
										},
										"sink": {
											"name": "Toev_aan_huisnr",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Postcode']"
										},
										"sink": {
											"name": "Postcode"
										}
									},
									{
										"source": {
											"path": "[['Woonplaats']"
										},
										"sink": {
											"name": "Woonplaats"
										}
									},
									{
										"source": {
											"path": "[['Land']"
										},
										"sink": {
											"name": "Land"
										}
									},
									{
										"source": {
											"path": "[['UPN']"
										},
										"sink": {
											"name": "UPN"
										}
									},
									{
										"source": {
											"path": "[['E-mail_werk']"
										},
										"sink": {
											"name": "E-mail_werk"
										}
									},
									{
										"source": {
											"path": "$['skip']"
										},
										"sink": {
											"name": "skip"
										}
									},
									{
										"source": {
											"path": "$['take']"
										},
										"sink": {
											"name": "take"
										}
									}
								],
								"collectionReference": "$['rows']"
							}
						},
						"inputs": [
							{
								"referenceName": "AFAS_BI_Power_Medewerkers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_AFAS_Medewerker",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "df_vul_dim_medewerker",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_AFAS_Medewerkers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_dim_medewerker",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "STG_AFAS_Loonverdeling",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['skip']"
										},
										"sink": {
											"name": "skip"
										}
									},
									{
										"source": {
											"path": "$['take']"
										},
										"sink": {
											"name": "take"
										}
									},
									{
										"source": {
											"path": "[['Medewerker']"
										},
										"sink": {
											"name": "Medewerker"
										}
									},
									{
										"source": {
											"path": "[['DV_nr']"
										},
										"sink": {
											"name": "DV_nr"
										}
									},
									{
										"source": {
											"path": "[['DV_Begin']"
										},
										"sink": {
											"name": "DV_Begin"
										}
									},
									{
										"source": {
											"path": "[['DV_Eind']"
										},
										"sink": {
											"name": "DV_Eind"
										}
									},
									{
										"source": {
											"path": "[['Vlgnr_contract']"
										},
										"sink": {
											"name": "Vlgnr_contract"
										}
									},
									{
										"source": {
											"path": "[['Contr_Begin']"
										},
										"sink": {
											"name": "Contr_Begin"
										}
									},
									{
										"source": {
											"path": "[['Contr_Eind']"
										},
										"sink": {
											"name": "Contr_Eind"
										}
									},
									{
										"source": {
											"path": "[['Type_contract_code']"
										},
										"sink": {
											"name": "Type_contract_code"
										}
									},
									{
										"source": {
											"path": "[['Type_contract']"
										},
										"sink": {
											"name": "Type_contract"
										}
									},
									{
										"source": {
											"path": "[['Soort_medewerker_code']"
										},
										"sink": {
											"name": "Soort_medewerker_code"
										}
									},
									{
										"source": {
											"path": "[['Soort_Medewerker']"
										},
										"sink": {
											"name": "Soort_Medewerker"
										}
									},
									{
										"source": {
											"path": "[['Dienstbetrekking_code']"
										},
										"sink": {
											"name": "Dienstbetrekking_code"
										}
									},
									{
										"source": {
											"path": "[['Dienstbetrekking']"
										},
										"sink": {
											"name": "Dienstbetrekking"
										}
									},
									{
										"source": {
											"path": "[['Functie_Begin']"
										},
										"sink": {
											"name": "Functie_Begin"
										}
									},
									{
										"source": {
											"path": "[['Functie_Eind']"
										},
										"sink": {
											"name": "Functie_Eind"
										}
									},
									{
										"source": {
											"path": "[['Hoofdkostenplaats']"
										},
										"sink": {
											"name": "Hoofdkostenplaats"
										}
									},
									{
										"source": {
											"path": "[['Formatie_Begin']"
										},
										"sink": {
											"name": "Formatie_Begin"
										}
									},
									{
										"source": {
											"path": "[['Formatie_Eind']"
										},
										"sink": {
											"name": "Formatie_Eind"
										}
									},
									{
										"source": {
											"path": "[['ParttimePerc']"
										},
										"sink": {
											"name": "ParttimePerc"
										}
									},
									{
										"source": {
											"path": "[['Uren_week']"
										},
										"sink": {
											"name": "Uren_week"
										}
									},
									{
										"source": {
											"path": "[['Dagen_week']"
										},
										"sink": {
											"name": "Dagen_week"
										}
									},
									{
										"source": {
											"path": "[['Kostenplaats']"
										},
										"sink": {
											"name": "Kostenplaats"
										}
									},
									{
										"source": {
											"path": "[['OE']"
										},
										"sink": {
											"name": "OE"
										}
									},
									{
										"source": {
											"path": "[['Loonv_perc']"
										},
										"sink": {
											"name": "Loonv_perc"
										}
									},
									{
										"source": {
											"path": "[['Functie_code']"
										},
										"sink": {
											"name": "Functie_code"
										}
									},
									{
										"source": {
											"path": "[['Functie_omschr']"
										},
										"sink": {
											"name": "Functie_omschr"
										}
									},
									{
										"source": {
											"path": "[['Werkgever_code']"
										},
										"sink": {
											"name": "Werkgever_code"
										}
									},
									{
										"source": {
											"path": "[['Werkgever_naam']"
										},
										"sink": {
											"name": "Werkgever_naam"
										}
									},
									{
										"source": {
											"path": "[['Salaris_begin']"
										},
										"sink": {
											"name": "Salaris_begin"
										}
									},
									{
										"source": {
											"path": "[['Salaris_eind']"
										},
										"sink": {
											"name": "Salaris_eind"
										}
									},
									{
										"source": {
											"path": "[['Cao_code_regeling']"
										},
										"sink": {
											"name": "Cao_code_regeling"
										}
									},
									{
										"source": {
											"path": "[['CAO_omschrijving']"
										},
										"sink": {
											"name": "CAO_omschrijving"
										}
									},
									{
										"source": {
											"path": "[['Hoofd_Functie_code']"
										},
										"sink": {
											"name": "Hoofd_Functie_code"
										}
									},
									{
										"source": {
											"path": "[['Hoofd_Functie_Omschr']"
										},
										"sink": {
											"name": "Hoofd_Functie_Omschr"
										}
									},
									{
										"source": {
											"path": "[['Arbeidsvoorwaarde_code']"
										},
										"sink": {
											"name": "Arbeidsvoorwaarde_code"
										}
									},
									{
										"source": {
											"path": "[['Begindatum_contractketen']"
										},
										"sink": {
											"name": "Begindatum_contractketen"
										}
									},
									{
										"source": {
											"path": "[['Begindatum_organigram']"
										},
										"sink": {
											"name": "Begindatum_organigram"
										}
									}
								],
								"collectionReference": "$['rows']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "AFAS_BI_Power_Loonverdeling",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_AFAS_Loonverdeling",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "df_vul_feit_formatie",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_vul_dim_kostenplaats",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "df_vul_personeel_dim_contract",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "df_vul_dim_medewerker",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "df_vul_personeel_dim_cao",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "df_vul_personeel_dim_medewerkersoort",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_feit_formatie",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGAFASLoonverdeling": {},
									"RefDatum": {},
									"PerMedewerker": {},
									"RefKostenplaats": {},
									"Verzuim": {},
									"VerzuimVolgenderegel": {},
									"Looncomponenten": {},
									"Formatie": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_vul_feit_begroting",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "df_vul_dim_kostenplaats",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_feit_begroting",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Formatiebegroting": {},
									"maanden": {},
									"RefKostenplaats": {},
									"DMFeitBegroting": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_vul_dim_kostenplaats",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_referentie_dim_kostenplaats",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ExcelOrganisatie": {},
									"RefKostenplaats": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_vul_personeel_dim_cao",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_AFAS_Loonverdeling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_dim_cao",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CAO": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_vul_personeel_dim_contract",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_AFAS_Loonverdeling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_dim_contract",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "df_vul_personeel_dim_medewerkersoort",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_AFAS_Loonverdeling",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_dim_medewerkersoort",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"loonverdeling": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "STG_AFAS_Kostensoort_functie",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['skip']"
										},
										"sink": {
											"name": "skip"
										}
									},
									{
										"source": {
											"path": "$['take']"
										},
										"sink": {
											"name": "take"
										}
									},
									{
										"source": {
											"path": "[['Specifieke_bron_code']"
										},
										"sink": {
											"name": "Specifieke_bron_code"
										}
									},
									{
										"source": {
											"path": "[['Specifieke_bron_omschrijving']"
										},
										"sink": {
											"name": "Specifieke_bron_omschrijving"
										}
									},
									{
										"source": {
											"path": "[['Vaste_waarde']"
										},
										"sink": {
											"name": "Vaste_waarde"
										}
									}
								],
								"collectionReference": "$['rows']"
							}
						},
						"inputs": [
							{
								"referenceName": "AFAS_BI_Power_Kostensoort_functie",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_AFAS_Kostensoort_functie",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "df_vul_dim_functie",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "STG_AFAS_Kostensoort_functie",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_dim_functie",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"AfasKostensoort": {},
									"DimFunctie": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "STG_AFAS_Verzuim",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Medewerker']"
										},
										"sink": {
											"name": "Medewerker"
										}
									},
									{
										"source": {
											"path": "[['Naam']"
										},
										"sink": {
											"name": "Naam"
										}
									},
									{
										"source": {
											"path": "[['BegindatumVerzuimmelding']"
										},
										"sink": {
											"name": "BegindatumVerzuimmelding",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['VerzuimverloopDatum']"
										},
										"sink": {
											"name": "VerzuimverloopDatum",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Einddatum_verzuim']"
										},
										"sink": {
											"name": "Einddatum_verzuim",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['VerzuimsoortCode']"
										},
										"sink": {
											"name": "VerzuimsoortCode"
										}
									},
									{
										"source": {
											"path": "[['VerzuimsoortOmschrijving']"
										},
										"sink": {
											"name": "VerzuimsoortOmschrijving"
										}
									},
									{
										"source": {
											"path": "[['AanwezigheidsPercentage']"
										},
										"sink": {
											"name": "AanwezigheidsPercentage"
										}
									},
									{
										"source": {
											"path": "[['AanwezigheidsPercentage_AT']"
										},
										"sink": {
											"name": "AanwezigheidsPercentage_AT"
										}
									},
									{
										"source": {
											"path": "[['Datum_uit_dienst']"
										},
										"sink": {
											"name": "Datum_uit_dienst",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Soort_Medewerker']"
										},
										"sink": {
											"name": "Soort_Medewerker"
										}
									},
									{
										"source": {
											"path": "[['Reden_verzuim']"
										},
										"sink": {
											"name": "Reden_verzuim",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Vangnetregeling']"
										},
										"sink": {
											"name": "Vangnetregeling"
										}
									},
									{
										"source": {
											"path": "[['Begindatum_doorlopend_verzuim']"
										},
										"sink": {
											"name": "Begindatum_doorlopend_verzuim",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Doorlopend_verzuim']"
										},
										"sink": {
											"name": "Doorlopend_verzuim"
										}
									}
								],
								"collectionReference": "$['rows']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "AFAS_BI_Power_Verzuim",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_AFAS_Verzuim",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_AFAS_Looncomponenten",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['skip']"
										},
										"sink": {
											"name": "skip"
										}
									},
									{
										"source": {
											"path": "$['take']"
										},
										"sink": {
											"name": "take"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Functie']"
										},
										"sink": {
											"name": "Functie"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Org_eenheid']"
										},
										"sink": {
											"name": "Org_eenheid"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Medewerker']"
										},
										"sink": {
											"name": "Medewerker"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Dienstverband']"
										},
										"sink": {
											"name": "Dienstverband"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Kostenplaats']"
										},
										"sink": {
											"name": "Kostenplaats"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Kostenplaats_sal']"
										},
										"sink": {
											"name": "Kostenplaats_sal"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Kostendrager']"
										},
										"sink": {
											"name": "Kostendrager"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Jaar']"
										},
										"sink": {
											"name": "Jaar"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Periode']"
										},
										"sink": {
											"name": "Periode"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Cao_code']"
										},
										"sink": {
											"name": "Cao_code"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Looncomponent']"
										},
										"sink": {
											"name": "Looncomponent"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Omschrijving_looncomponent']"
										},
										"sink": {
											"name": "Omschrijving_looncomponent"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Bedrag']"
										},
										"sink": {
											"name": "Bedrag"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Werkgever_code']"
										},
										"sink": {
											"name": "Werkgever_code"
										}
									},
									{
										"source": {
											"path": "$['rows'][0]['Einddatum_contract']"
										},
										"sink": {
											"name": "Einddatum_contract",
											"type": "DateTime"
										}
									}
								],
								"collectionReference": "",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "AFAS_BI_Power_Looncomponenten",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_AFAS_Looncomponenten",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "STG_Exact_Grtbk",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "ID",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "reknr",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "reknr",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "oms25_0",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "oms25_0",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "oms25_1",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "oms25_1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "oms25_2",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "oms25_2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "oms25_3",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "oms25_3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "oms25_4",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "oms25_4",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "bal_vw",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "bal_vw",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "debcrd",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "debcrd",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "subtotrek",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "subtotrek",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "gbktext",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "gbktext",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "btw_code",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "btw_code",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "projectrek",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "projectrek",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "kstplrek",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "kstplrek",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "kstdrrek",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "kstdrrek",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "aantallen",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "aantallen",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "omzrek",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "omzrek",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "type_rek",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type_rek",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "mineraal",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "mineraal",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "blokkeer",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "blokkeer",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "herwaard",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "herwaard",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "verdicht",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "verdicht",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "blznr",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "blznr",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "perc_naf",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "perc_naf",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "reknr_naf",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "reknr_naf",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "perc_prive",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "perc_prive",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "reknr_priv",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "reknr_priv",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "bkjrcode",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "bkjrcode",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "bkjr_mut",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "bkjr_mut",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "afletteren",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "afletteren",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "aflet_mut",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "aflet_mut",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "act_rek",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "act_rek",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "type_com",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type_com",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "std_kstpl",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "std_kstpl",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "std_kstdr",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "std_kstdr",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "aandacht",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "aandacht",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "wisselrek",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "wisselrek",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "type_rek2",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "type_rek2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "wijz_reg",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "wijz_reg",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "reknr_l",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "reknr_l",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "prnbifunc",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "prnbifunc",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "afsreknr",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "afsreknr",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "scheme_type",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "scheme_type",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "analyt_acc",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "analyt_acc",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "reknr_2",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "reknr_2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield1",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield1",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield2",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield2",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield3",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield3",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield4",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield4",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield5",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield5",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield6",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield6",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield7",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield7",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield8",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield8",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield9",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield9",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield10",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "freefield10",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "freefield11",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "freefield11",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "freefield12",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "freefield12",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "freefield13",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "freefield13",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "freefield14",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "freefield14",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "freefield15",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "freefield15",
											"type": "Double",
											"physicalType": "DOUBLE"
										}
									},
									{
										"source": {
											"name": "freefield16",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "freefield16",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "freefield17",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "freefield17",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "freefield18",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "freefield18",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "freefield19",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "freefield19",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "freefield20",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "freefield20",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "statusdate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "statusdate",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "centr_account",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "centr_account",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "IntBalanceDebit",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "IntBalanceDebit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "subclass_pass",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "subclass_pass",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "OffBalSubClassCredit",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "OffBalSubClassCredit",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "IsPersonalAccount",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "IsPersonalAccount",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "TypeAdjustmentInflation",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "TypeAdjustmentInflation",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DocumentID",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "DocumentID",
											"type": "Guid",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "alternativeledger",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "alternativeledger",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "UseResource",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseResource",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UseProject",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseProject",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UseItem",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseItem",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UseDebtor",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseDebtor",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UseCreditor",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseCreditor",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UseIntercompany",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseIntercompany",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "CompanyCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AccountCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "AccountReportCategory",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AccountReportCategory",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "AccountConversionType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "AccountConversionType",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Class_01",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_01",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_02",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_02",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_03",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_03",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_04",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_04",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_05",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_05",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_06",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_06",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_07",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_07",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_08",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_08",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_09",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_09",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_10",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_10",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_11",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_11",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "Class_12",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Class_12",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "UseIBActive",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseIBActive",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "UseCostcenterAllocation",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "UseCostcenterAllocation",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "AssociateGL",
											"type": "String",
											"physicalType": "char"
										},
										"sink": {
											"name": "AssociateGL",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "ShowNotes",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ShowNotes",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "ExcludeVATListing",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "ExcludeVATListing",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "Division",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Division",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "syscreated",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "syscreated",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "syscreator",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "syscreator",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "sysmodified",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "sysmodified",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "sysmodifier",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "sysmodifier",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "sysguid",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "sysguid",
											"type": "Guid",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "timestamp",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "timestamp"
										}
									},
									{
										"source": {
											"name": "MSICCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MSICCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "TaxonomyCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TaxonomyCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "TariffCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TariffCode",
											"type": "String",
											"physicalType": "UTF8"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Exact_grtbk",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STG_Exact_Grtbk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-17T12:38:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AFAS_BI_Power_Medewerkers')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Medewerker')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_dim_medewerker')]",
				"[concat(variables('factoryId'), '/datasets/AFAS_BI_Power_Loonverdeling')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Loonverdeling')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_feit_formatie')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_feit_begroting')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_referentie_dim_kostenplaats')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_dim_cao')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_dim_contract')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_dim_medewerkersoort')]",
				"[concat(variables('factoryId'), '/datasets/AFAS_BI_Power_Kostensoort_functie')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Kostensoort_functie')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_dim_functie')]",
				"[concat(variables('factoryId'), '/datasets/AFAS_BI_Power_Verzuim')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Verzuim')]",
				"[concat(variables('factoryId'), '/datasets/AFAS_BI_Power_Looncomponenten')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Looncomponenten')]",
				"[concat(variables('factoryId'), '/datasets/Exact_grtbk')]",
				"[concat(variables('factoryId'), '/datasets/STG_Exact_Grtbk')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Referentie')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "vul_postcode",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_referentie_dim_postcode",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"excelpostcode": {},
									"source1": {},
									"RefPostcode": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "vul_Diensjaren",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_referentie_dim_dienstjaren",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dienstjaren": {},
									"Refdienstjaren": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "vul_Leeftijdsgroep",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_referentie_dim_leeftijdsgroep",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Leeftijdsgroep": {},
									"dimleeftijdsgroep": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-17T06:41:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_vul_referentie_dim_postcode')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_referentie_dim_dienstjaren')]",
				"[concat(variables('factoryId'), '/dataflows/df_vul_referentie_dim_leeftijdsgroep')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tbv testruns')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_vul_personeel_feit_formatie",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"STGAFASLoonverdeling": {},
									"RefDatum": {},
									"PerMedewerker": {},
									"RefKostenplaats": {},
									"Verzuim": {},
									"VerzuimVolgenderegel": {},
									"Looncomponenten": {},
									"Formatie": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 48,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-05-17T14:43:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_vul_personeel_feit_formatie')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFAS_BI_Power_Kostensoort_functie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_Afas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/AFAS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "BI_Power_Kostensoort_functie?take=10000"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"skip": {
							"type": "integer"
						},
						"take": {
							"type": "integer"
						},
						"rows": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Functie": {
										"type": "string"
									},
									"Org_eenheid": {
										"type": "string"
									},
									"Medewerker": {
										"type": "string"
									},
									"Dienstverband": {
										"type": "integer"
									},
									"Kostenplaats": {
										"type": "string"
									},
									"Kostenplaats_sal": {
										"type": "string"
									},
									"Kostendrager": {
										"type": "string"
									},
									"Jaar": {
										"type": "integer"
									},
									"Periode": {
										"type": "integer"
									},
									"Cao_code": {
										"type": "string"
									},
									"Looncomponent": {
										"type": "integer"
									},
									"Omschrijving_looncomponent": {
										"type": "string"
									},
									"Bedrag": {
										"type": "number"
									},
									"Werkgever_code": {
										"type": "string"
									},
									"Einddatum_contract": {
										"type": "null"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_Afas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFAS_BI_Power_Looncomponenten')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_Afas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/AFAS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "BI_Power_Looncomponenten?take=10000"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"skip": {
							"type": "integer"
						},
						"take": {
							"type": "integer"
						},
						"rows": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Functie": {
										"type": "string"
									},
									"Org_eenheid": {
										"type": "string"
									},
									"Medewerker": {
										"type": "string"
									},
									"Dienstverband": {
										"type": "integer"
									},
									"Kostenplaats": {
										"type": "string"
									},
									"Kostenplaats_sal": {
										"type": "string"
									},
									"Kostendrager": {
										"type": "string"
									},
									"Jaar": {
										"type": "integer"
									},
									"Periode": {
										"type": "integer"
									},
									"Cao_code": {
										"type": "string"
									},
									"Looncomponent": {
										"type": "integer"
									},
									"Omschrijving_looncomponent": {
										"type": "string"
									},
									"Bedrag": {
										"type": "number"
									},
									"Werkgever_code": {
										"type": "string"
									},
									"Einddatum_contract": {
										"type": "null"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_Afas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFAS_BI_Power_Loonverdeling')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_Afas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/AFAS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "BI_Power_Loonverdeling?take=100000"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"skip": {
							"type": "integer"
						},
						"take": {
							"type": "integer"
						},
						"rows": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Medewerker": {
										"type": "string"
									},
									"DV_nr": {
										"type": "integer"
									},
									"DV_Begin": {
										"type": "string"
									},
									"DV_Eind": {
										"type": "string"
									},
									"Vlgnr_contract": {
										"type": "integer"
									},
									"Contr_Begin": {
										"type": "string"
									},
									"Contr_Eind": {
										"type": "string"
									},
									"Type_contract_code": {
										"type": "string"
									},
									"Type_contract": {
										"type": "string"
									},
									"Soort_medewerker_code": {
										"type": "string"
									},
									"Soort_Medewerker": {
										"type": "string"
									},
									"Dienstbetrekking_code": {
										"type": "string"
									},
									"Dienstbetrekking": {
										"type": "string"
									},
									"Functie_Begin": {
										"type": "string"
									},
									"Functie_Eind": {
										"type": "string"
									},
									"Hoofdkostenplaats": {
										"type": "string"
									},
									"Formatie_Begin": {
										"type": "string"
									},
									"Formatie_Eind": {
										"type": "string"
									},
									"ParttimePerc": {
										"type": "number"
									},
									"Uren_week": {
										"type": "number"
									},
									"Dagen_week": {
										"type": "number"
									},
									"Kostenplaats": {
										"type": "string"
									},
									"OE": {
										"type": "string"
									},
									"Loonv_perc": {
										"type": "number"
									},
									"Functie_code": {
										"type": "string"
									},
									"Functie_omschr": {
										"type": "string"
									},
									"Werkgever_code": {
										"type": "string"
									},
									"Werkgever_naam": {
										"type": "string"
									},
									"Salaris_begin": {
										"type": "string"
									},
									"Salaris_eind": {
										"type": "string"
									},
									"Cao_code_regeling": {
										"type": "string"
									},
									"CAO_omschrijving": {
										"type": "string"
									},
									"Hoofd_Functie_code": {
										"type": "string"
									},
									"Hoofd_Functie_Omschr": {
										"type": "string"
									},
									"Arbeidsvoorwaarde_code": {
										"type": "string"
									},
									"Begindatum_contractketen": {
										"type": "string"
									},
									"Begindatum_organigram": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_Afas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFAS_BI_Power_Medewerkers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_Afas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/AFAS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "BI_Power_Medewerkers?take=10000"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"skip": {
							"type": "integer"
						},
						"take": {
							"type": "integer"
						},
						"rows": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Medewerker": {
										"type": "string"
									},
									"Roepnaam": {
										"type": "string"
									},
									"Voornaam": {
										"type": "string"
									},
									"Voorletters": {
										"type": "string"
									},
									"Voorvoegsel": {
										"type": "null"
									},
									"Achternaam": {
										"type": "string"
									},
									"Geboortenaam_apart_vastleggen": {
										"type": "boolean"
									},
									"Voorv_geb_naam": {
										"type": "null"
									},
									"Geboortenaam": {
										"type": "string"
									},
									"Voorvoegsel_partner": {
										"type": "string"
									},
									"Geb_naam_partner": {
										"type": "string"
									},
									"Naamgebruik_code": {
										"type": "string"
									},
									"Naamgebruik": {
										"type": "string"
									},
									"Geslacht_code": {
										"type": "string"
									},
									"Geslacht": {
										"type": "string"
									},
									"Nationaliteit_code": {
										"type": "string"
									},
									"Nationaliteit": {
										"type": "string"
									},
									"Geboortedatum": {
										"type": "string"
									},
									"Geboorteland": {
										"type": "string"
									},
									"Geboorteplaats": {
										"type": "string"
									},
									"BSN": {
										"type": "string"
									},
									"Burgerlijke_staat_code": {
										"type": "string"
									},
									"Burgerlijke_staat": {
										"type": "string"
									},
									"Huwelijksdatum": {
										"type": "string"
									},
									"Datum_scheiding": {
										"type": "null"
									},
									"Overlijdensdatum": {
										"type": "null"
									},
									"Telefoonnr_prive": {
										"type": "null"
									},
									"Mobiel_werk": {
										"type": "null"
									},
									"Mobiel_prive": {
										"type": "null"
									},
									"E-mail_prive": {
										"type": "null"
									},
									"Achternaam__init_voorvoegsel__roepnaam_": {
										"type": "string"
									},
									"Straat": {
										"type": "string"
									},
									"Huisnummer": {
										"type": "integer"
									},
									"Toev_aan_huisnr": {
										"type": "null"
									},
									"Postcode": {
										"type": "string"
									},
									"Woonplaats": {
										"type": "string"
									},
									"Land": {
										"type": "string"
									},
									"UPN": {
										"type": "string"
									},
									"E-mail_werk": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_Afas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AFAS_BI_Power_Verzuim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer_Afas",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/AFAS"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": "BI_Power_Verzuim?take=100000"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"skip": {
							"type": "integer"
						},
						"take": {
							"type": "integer"
						},
						"rows": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"Medewerker": {
										"type": "string"
									},
									"Naam": {
										"type": "integer"
									},
									"BegindatumVerzuimmelding": {
										"type": "string"
									},
									"VerzuimverloopDatum": {
										"type": "string"
									},
									"Einddatum_verzuim": {
										"type": "string"
									},
									"VerzuimsoortCode": {
										"type": "string"
									},
									"VerzuimsoortOmschrijving": {
										"type": "string"
									},
									"AanwezigheidsPercentage": {
										"type": "number"
									},
									"AanwezigheidsPercentage_AT": {
										"type": "number"
									},
									"Datum_uit_dienst": {
										"type": "null"
									},
									"Soort_Medewerker": {
										"type": "string"
									},
									"Reden_verzuim": {
										"type": "null"
									},
									"Vangnetregeling": {
										"type": "boolean"
									},
									"Begindatum_doorlopend_verzuim": {
										"type": "string"
									},
									"Doorlopend_verzuim": {
										"type": "boolean"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer_Afas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Arts_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_Hix",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/HIX"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "CODE",
						"type": "nvarchar"
					},
					{
						"name": "OMSCHR",
						"type": "nvarchar"
					},
					{
						"name": "VERVALLEN",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CSZISLIB_ARTSTYPE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_Hix')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "ref",
					"table": "temp2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dienstjaren')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Referentie"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Dienstjaren",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "referentie.xlsx",
						"folderPath": "tabel referentie",
						"fileSystem": "referentie"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "jaar",
						"type": "String"
					},
					{
						"name": "maand",
						"type": "String"
					},
					{
						"name": "groep1",
						"type": "String"
					},
					{
						"name": "groep2",
						"type": "String"
					},
					{
						"name": "groep3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exact_crediteuren')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_Exact",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Exact"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "crdnr",
						"type": "char"
					},
					{
						"name": "naam",
						"type": "varchar"
					},
					{
						"name": "adres1",
						"type": "varchar"
					},
					{
						"name": "adres2",
						"type": "varchar"
					},
					{
						"name": "adres3",
						"type": "varchar"
					},
					{
						"name": "postcode",
						"type": "varchar"
					},
					{
						"name": "woonpl",
						"type": "varchar"
					},
					{
						"name": "landcode",
						"type": "char"
					},
					{
						"name": "crdzk",
						"type": "char"
					},
					{
						"name": "valcode",
						"type": "char"
					},
					{
						"name": "telnr",
						"type": "varchar"
					},
					{
						"name": "faxnr",
						"type": "varchar"
					},
					{
						"name": "cntpers1",
						"type": "varchar"
					},
					{
						"name": "mv1",
						"type": "char"
					},
					{
						"name": "prdcode1",
						"type": "char"
					},
					{
						"name": "vrlttrs1",
						"type": "varchar"
					},
					{
						"name": "functie1",
						"type": "varchar"
					},
					{
						"name": "telnrcp1",
						"type": "varchar"
					},
					{
						"name": "banknr1",
						"type": "varchar"
					},
					{
						"name": "banknr2",
						"type": "varchar"
					},
					{
						"name": "pstbanknrc",
						"type": "varchar"
					},
					{
						"name": "betwijze",
						"type": "char"
					},
					{
						"name": "tegreknr",
						"type": "char"
					},
					{
						"name": "dagbknr",
						"type": "char"
					},
					{
						"name": "crdtext",
						"type": "int",
						"precision": 10
					},
					{
						"name": "aandacht",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "categorie",
						"type": "varchar"
					},
					{
						"name": "kredlimiet",
						"type": "float",
						"precision": 15
					},
					{
						"name": "autombet",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "betcond",
						"type": "char"
					},
					{
						"name": "blokkeer",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "klantcode",
						"type": "char"
					},
					{
						"name": "prijslijst",
						"type": "varchar"
					},
					{
						"name": "ex_artcode",
						"type": "char"
					},
					{
						"name": "kortingo",
						"type": "float",
						"precision": 15
					},
					{
						"name": "layoutcode",
						"type": "char"
					},
					{
						"name": "taalcode",
						"type": "char"
					},
					{
						"name": "saldontvwd",
						"type": "float",
						"precision": 15
					},
					{
						"name": "saldontvwc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "blznr",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "opensaldo",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bedrbest",
						"type": "float",
						"precision": 15
					},
					{
						"name": "land_iso",
						"type": "char"
					},
					{
						"name": "btw_nummer",
						"type": "varchar"
					},
					{
						"name": "datumctrl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "categ_belg",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "statfactor",
						"type": "char"
					},
					{
						"name": "btwtrans",
						"type": "char"
					},
					{
						"name": "wijz_btwt",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "stelsel",
						"type": "char"
					},
					{
						"name": "wijz_stel",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "transact_a",
						"type": "char"
					},
					{
						"name": "wijz_trs_a",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "transact_b",
						"type": "char"
					},
					{
						"name": "wijz_trs_b",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "landherk",
						"type": "char"
					},
					{
						"name": "wijz_herk",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "landoorspr",
						"type": "char"
					},
					{
						"name": "wijz_oorsp",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "vervoer",
						"type": "char"
					},
					{
						"name": "wijz_verv",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "plts_ll",
						"type": "char"
					},
					{
						"name": "wijz_ll",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "intra_lvcd",
						"type": "char"
					},
					{
						"name": "wijz_levcd",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "trsshpm_cd",
						"type": "char"
					},
					{
						"name": "wijz_tshpm",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "landabc",
						"type": "char"
					},
					{
						"name": "wijz_abc",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "int_regio",
						"type": "char"
					},
					{
						"name": "wijz_regio",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "aant_bstkp",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "kstplcode",
						"type": "char"
					},
					{
						"name": "bestbev",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "crd_adrnr",
						"type": "char"
					},
					{
						"name": "geniet_com",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "voornaam",
						"type": "varchar"
					},
					{
						"name": "telex",
						"type": "char"
					},
					{
						"name": "verz_op",
						"type": "char"
					},
					{
						"name": "limiet_bdr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "maxwis_bdr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bet_zkblwi",
						"type": "char"
					},
					{
						"name": "bet_zkgcd",
						"type": "char"
					},
					{
						"name": "kostencode",
						"type": "char"
					},
					{
						"name": "ico_nummer",
						"type": "char"
					},
					{
						"name": "soort_crd",
						"type": "char"
					},
					{
						"name": "percentwka",
						"type": "float",
						"precision": 15
					},
					{
						"name": "sign_datum",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "imocode",
						"type": "char"
					},
					{
						"name": "participant",
						"type": "char"
					},
					{
						"name": "fiscode",
						"type": "varchar"
					},
					{
						"name": "region",
						"type": "varchar"
					},
					{
						"name": "erklev",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "internet",
						"type": "varchar"
					},
					{
						"name": "freefield1",
						"type": "varchar"
					},
					{
						"name": "invname1",
						"type": "varchar"
					},
					{
						"name": "freefield2",
						"type": "varchar"
					},
					{
						"name": "freefield3",
						"type": "varchar"
					},
					{
						"name": "freefield4",
						"type": "varchar"
					},
					{
						"name": "freefield5",
						"type": "varchar"
					},
					{
						"name": "freefield6",
						"type": "varchar"
					},
					{
						"name": "freefield7",
						"type": "varchar"
					},
					{
						"name": "freefield8",
						"type": "varchar"
					},
					{
						"name": "freefield9",
						"type": "varchar"
					},
					{
						"name": "freefield10",
						"type": "varchar"
					},
					{
						"name": "freefield11",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield12",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield13",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield14",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield15",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield16",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield17",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield18",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield19",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield20",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "syscreated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "syscreator",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysmodified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysmodifier",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "DocumentID",
						"type": "uniqueidentifier"
					},
					{
						"name": "centr_account",
						"type": "char"
					},
					{
						"name": "CompanyType",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CompanyCode",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Credit"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_Exact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exact_debiteuren')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_Exact",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Exact"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "debnr",
						"type": "char"
					},
					{
						"name": "naam",
						"type": "varchar"
					},
					{
						"name": "adres1",
						"type": "varchar"
					},
					{
						"name": "adres2",
						"type": "varchar"
					},
					{
						"name": "adres3",
						"type": "varchar"
					},
					{
						"name": "postcode",
						"type": "varchar"
					},
					{
						"name": "woonpl",
						"type": "varchar"
					},
					{
						"name": "landcode",
						"type": "char"
					},
					{
						"name": "debzk",
						"type": "char"
					},
					{
						"name": "valcode",
						"type": "char"
					},
					{
						"name": "telnr",
						"type": "varchar"
					},
					{
						"name": "faxnr",
						"type": "varchar"
					},
					{
						"name": "cntpers1",
						"type": "varchar"
					},
					{
						"name": "mv1",
						"type": "char"
					},
					{
						"name": "prdcode1",
						"type": "char"
					},
					{
						"name": "vrlttrs1",
						"type": "varchar"
					},
					{
						"name": "functie1",
						"type": "varchar"
					},
					{
						"name": "telnrcp1",
						"type": "varchar"
					},
					{
						"name": "banknr",
						"type": "varchar"
					},
					{
						"name": "pstbanknrd",
						"type": "varchar"
					},
					{
						"name": "betwijze",
						"type": "char"
					},
					{
						"name": "tegreknr",
						"type": "char"
					},
					{
						"name": "dagbknr",
						"type": "char"
					},
					{
						"name": "debtext",
						"type": "int",
						"precision": 10
					},
					{
						"name": "aandacht",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "categorie",
						"type": "varchar"
					},
					{
						"name": "fakdebnr",
						"type": "varchar"
					},
					{
						"name": "kredlimiet",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bether",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "betcond",
						"type": "char"
					},
					{
						"name": "blokkeer",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "prijslijst",
						"type": "varchar"
					},
					{
						"name": "ex_artcode",
						"type": "char"
					},
					{
						"name": "levwijze",
						"type": "char"
					},
					{
						"name": "korting",
						"type": "float",
						"precision": 15
					},
					{
						"name": "datlaanm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "layoutcode",
						"type": "char"
					},
					{
						"name": "taalcode",
						"type": "char"
					},
					{
						"name": "saldontvwd",
						"type": "float",
						"precision": 15
					},
					{
						"name": "saldontvwc",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bedrorder",
						"type": "float",
						"precision": 15
					},
					{
						"name": "blznr",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "debopensal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "faktoring",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "land_iso",
						"type": "char"
					},
					{
						"name": "btw_nummer",
						"type": "varchar"
					},
					{
						"name": "datumctrl",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "categ_belg",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "statfactor",
						"type": "char"
					},
					{
						"name": "btwtrans",
						"type": "char"
					},
					{
						"name": "wijz_btwt",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "stelsel",
						"type": "char"
					},
					{
						"name": "wijz_stel",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "transact_a",
						"type": "char"
					},
					{
						"name": "wijz_trs_a",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "transact_b",
						"type": "char"
					},
					{
						"name": "wijz_trs_b",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "landbest",
						"type": "char"
					},
					{
						"name": "wijz_best",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "vervoer",
						"type": "char"
					},
					{
						"name": "wijz_verv",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "plts_ll",
						"type": "char"
					},
					{
						"name": "wijz_ll",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "intra_lvcd",
						"type": "char"
					},
					{
						"name": "wijz_levcd",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "trsshpm_cd",
						"type": "char"
					},
					{
						"name": "wijz_tshpm",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "landabc",
						"type": "char"
					},
					{
						"name": "wijz_abc",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "int_regio",
						"type": "char"
					},
					{
						"name": "wijz_regio",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "orderbev",
						"type": "char"
					},
					{
						"name": "backorders",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "verzamelen",
						"type": "char"
					},
					{
						"name": "aant_fakkp",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "kstplcode",
						"type": "char"
					},
					{
						"name": "deb_adrnr",
						"type": "char"
					},
					{
						"name": "stat_adrnr",
						"type": "char"
					},
					{
						"name": "stat_print",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "stat_nr",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "stat_datum",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "def_adrcd",
						"type": "char"
					},
					{
						"name": "def_routcd",
						"type": "char"
					},
					{
						"name": "def_selcd",
						"type": "char"
					},
					{
						"name": "def_fkort",
						"type": "float",
						"precision": 15
					},
					{
						"name": "voornaam",
						"type": "varchar"
					},
					{
						"name": "telex",
						"type": "char"
					},
					{
						"name": "verz_op",
						"type": "char"
					},
					{
						"name": "limiet_bdr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "maxwis_bdr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bet_zkblwi",
						"type": "char"
					},
					{
						"name": "bet_zkgcd",
						"type": "char"
					},
					{
						"name": "kostencode",
						"type": "char"
					},
					{
						"name": "ico_nummer",
						"type": "char"
					},
					{
						"name": "dagvmnd1",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "dagvmnd2",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "dagvmnd3",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "dagvmnd4",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "dagvmnd5",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "banknr2",
						"type": "varchar"
					},
					{
						"name": "levy",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "region_cd",
						"type": "char"
					},
					{
						"name": "fiscode",
						"type": "varchar"
					},
					{
						"name": "region",
						"type": "char"
					},
					{
						"name": "represent_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "area",
						"type": "char"
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "internet",
						"type": "varchar"
					},
					{
						"name": "creditcard",
						"type": "varchar"
					},
					{
						"name": "expirydate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "freefield1",
						"type": "varchar"
					},
					{
						"name": "freefield2",
						"type": "varchar"
					},
					{
						"name": "freefield3",
						"type": "varchar"
					},
					{
						"name": "freefield4",
						"type": "varchar"
					},
					{
						"name": "freefield5",
						"type": "varchar"
					},
					{
						"name": "freefield6",
						"type": "varchar"
					},
					{
						"name": "freefield7",
						"type": "varchar"
					},
					{
						"name": "freefield8",
						"type": "varchar"
					},
					{
						"name": "freefield9",
						"type": "varchar"
					},
					{
						"name": "freefield10",
						"type": "varchar"
					},
					{
						"name": "freefield11",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield12",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield13",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield14",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield15",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield16",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield17",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield18",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield19",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield20",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "invlay",
						"type": "char"
					},
					{
						"name": "invname1",
						"type": "varchar"
					},
					{
						"name": "invthreshold",
						"type": "float",
						"precision": 15
					},
					{
						"name": "loc",
						"type": "char"
					},
					{
						"name": "xvattype",
						"type": "char"
					},
					{
						"name": "syscreated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "syscreator",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountEmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditabilityScenario",
						"type": "char"
					},
					{
						"name": "sysmodified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysmodifier",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "DocumentID",
						"type": "uniqueidentifier"
					},
					{
						"name": "CalculatePenaltyInterest",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "IntermediaryAssociate",
						"type": "char"
					},
					{
						"name": "SendPenaltyInvoices",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "IntermediaryAssociateID",
						"type": "char"
					},
					{
						"name": "VATLiability",
						"type": "char"
					},
					{
						"name": "centr_account",
						"type": "char"
					},
					{
						"name": "CompanyType",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "CompanyCode",
						"type": "char"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Debitr"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_Exact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exact_gbkmut')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_Exact",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Exact"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "bkjrcode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "reknr",
						"type": "char"
					},
					{
						"name": "datum",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "periode",
						"type": "char"
					},
					{
						"name": "bkstnr",
						"type": "varchar"
					},
					{
						"name": "dagbknr",
						"type": "char"
					},
					{
						"name": "oms25",
						"type": "varchar"
					},
					{
						"name": "bdr_hfl",
						"type": "float",
						"precision": 15
					},
					{
						"name": "btw_code",
						"type": "char"
					},
					{
						"name": "btw_bdr_3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "btw_grond",
						"type": "float",
						"precision": 15
					},
					{
						"name": "tegreknr",
						"type": "char"
					},
					{
						"name": "debnr",
						"type": "char"
					},
					{
						"name": "crdnr",
						"type": "char"
					},
					{
						"name": "kstplcode",
						"type": "char"
					},
					{
						"name": "kstdrcode",
						"type": "char"
					},
					{
						"name": "aantal",
						"type": "float",
						"precision": 15
					},
					{
						"name": "valcode",
						"type": "char"
					},
					{
						"name": "exvalcode",
						"type": "char"
					},
					{
						"name": "koers",
						"type": "float",
						"precision": 15
					},
					{
						"name": "wisselkrs",
						"type": "float",
						"precision": 15
					},
					{
						"name": "koers3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bdr_val",
						"type": "float",
						"precision": 15
					},
					{
						"name": "dbk_verwnr",
						"type": "int",
						"precision": 10
					},
					{
						"name": "verwerknrl",
						"type": "int",
						"precision": 10
					},
					{
						"name": "volgnr5",
						"type": "char"
					},
					{
						"name": "regel",
						"type": "char"
					},
					{
						"name": "regelcode",
						"type": "char"
					},
					{
						"name": "storno",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "bkstnr_sub",
						"type": "varchar"
					},
					{
						"name": "betcond",
						"type": "char"
					},
					{
						"name": "btwper",
						"type": "float",
						"precision": 15
					},
					{
						"name": "oorsprong",
						"type": "char"
					},
					{
						"name": "vlgn_gbk2",
						"type": "varchar"
					},
					{
						"name": "btw_grval",
						"type": "float",
						"precision": 15
					},
					{
						"name": "afldat",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "docnumber",
						"type": "varchar"
					},
					{
						"name": "docdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "exvalbdr",
						"type": "float",
						"precision": 15
					},
					{
						"name": "entryorigin",
						"type": "char"
					},
					{
						"name": "vervdatkrd",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "vervdtkrd2",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "vervdatfak",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "kredbep",
						"type": "char"
					},
					{
						"name": "bdrkredbep",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bdrkredbp2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "betaalref",
						"type": "varchar"
					},
					{
						"name": "stat_nr",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "btw_nummer",
						"type": "varchar"
					},
					{
						"name": "rapnr",
						"type": "char"
					},
					{
						"name": "raplist",
						"type": "char"
					},
					{
						"name": "artcode",
						"type": "varchar"
					},
					{
						"name": "faktuurnr",
						"type": "char"
					},
					{
						"name": "bud_vers",
						"type": "char"
					},
					{
						"name": "syscreated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "syscreator",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReminderCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysmodified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReminderLayout",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastReminderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysmodifier",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "BlockItem",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "CompanyCode",
						"type": "char"
					},
					{
						"name": "res_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyCode",
						"type": "char"
					},
					{
						"name": "Rate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "bankacc",
						"type": "varchar"
					},
					{
						"name": "AmountCentral",
						"type": "float",
						"precision": 15
					},
					{
						"name": "VatBaseAmountCentral",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PaymentMethod",
						"type": "char"
					},
					{
						"name": "VatAmountCentral",
						"type": "float",
						"precision": 15
					},
					{
						"name": "CurrencyAliasAc",
						"type": "char"
					},
					{
						"name": "DocumentID",
						"type": "uniqueidentifier"
					},
					{
						"name": "facode",
						"type": "varchar"
					},
					{
						"name": "transtype",
						"type": "char"
					},
					{
						"name": "transsubtype",
						"type": "char"
					},
					{
						"name": "freefield1",
						"type": "varchar"
					},
					{
						"name": "freefield2",
						"type": "varchar"
					},
					{
						"name": "freefield3",
						"type": "varchar"
					},
					{
						"name": "freefield4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield5",
						"type": "float",
						"precision": 15
					},
					{
						"name": "project",
						"type": "varchar"
					},
					{
						"name": "DocAttachmentID",
						"type": "uniqueidentifier"
					},
					{
						"name": "cmp_wwn",
						"type": "uniqueidentifier"
					},
					{
						"name": "warehouse",
						"type": "char"
					},
					{
						"name": "orderdebtor",
						"type": "uniqueidentifier"
					},
					{
						"name": "PayrollSubtype",
						"type": "char"
					},
					{
						"name": "ReconcileNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "warehouse_location",
						"type": "char"
					},
					{
						"name": "EntryGuid",
						"type": "uniqueidentifier"
					},
					{
						"name": "TransactionGuid",
						"type": "uniqueidentifier"
					},
					{
						"name": "TransactionGuid2",
						"type": "uniqueidentifier"
					},
					{
						"name": "Checked",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Reviewed",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "BankTransactionGUID",
						"type": "uniqueidentifier"
					},
					{
						"name": "StockTrackingNumber",
						"type": "char"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReportingDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CashRegisterAccount",
						"type": "varchar"
					},
					{
						"name": "Original_Quantity",
						"type": "float",
						"precision": 15
					},
					{
						"name": "comp_code",
						"type": "char"
					},
					{
						"name": "Selcode",
						"type": "char"
					},
					{
						"name": "Unitcode",
						"type": "char"
					},
					{
						"name": "Pricelist",
						"type": "varchar"
					},
					{
						"name": "Discount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "Shipment",
						"type": "varchar"
					},
					{
						"name": "IntTransportMethod",
						"type": "varchar"
					},
					{
						"name": "IntPort",
						"type": "varchar"
					},
					{
						"name": "IntSystem",
						"type": "varchar"
					},
					{
						"name": "IntTransA",
						"type": "varchar"
					},
					{
						"name": "IntStatNr",
						"type": "varchar"
					},
					{
						"name": "IntStandardCode",
						"type": "varchar"
					},
					{
						"name": "IntTransShipment",
						"type": "varchar"
					},
					{
						"name": "IntTransB",
						"type": "varchar"
					},
					{
						"name": "IntArea",
						"type": "varchar"
					},
					{
						"name": "IntLandISO",
						"type": "varchar"
					},
					{
						"name": "IntLandDestOrig",
						"type": "varchar"
					},
					{
						"name": "IntDeliveryMethod",
						"type": "varchar"
					},
					{
						"name": "IntStatUnit",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IntWeight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IntComplete",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "LinkedLine",
						"type": "uniqueidentifier"
					},
					{
						"name": "PayrollCosts",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "TaxCode2",
						"type": "char"
					},
					{
						"name": "TaxCode3",
						"type": "char"
					},
					{
						"name": "TaxCode4",
						"type": "char"
					},
					{
						"name": "TaxCode5",
						"type": "char"
					},
					{
						"name": "TaxBasis2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxBasis3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxBasis4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxBasis5",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxAmount2",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxAmount3",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxAmount4",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxAmount5",
						"type": "float",
						"precision": 15
					},
					{
						"name": "StatisticalFactor",
						"type": "float",
						"precision": 15
					},
					{
						"name": "IntLandAssembly",
						"type": "varchar"
					},
					{
						"name": "backflush",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "LastReminderLayout",
						"type": "varchar"
					},
					{
						"name": "Correction",
						"type": "char"
					},
					{
						"name": "IBTDeliveryNr",
						"type": "varchar"
					},
					{
						"name": "Routing",
						"type": "varchar"
					},
					{
						"name": "Step",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Reasoncode",
						"type": "varchar"
					},
					{
						"name": "TransactionNumber",
						"type": "varchar"
					},
					{
						"name": "Type",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Status",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UniqueSeqNo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CompleteOperation",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ImSerialNr",
						"type": "varchar"
					},
					{
						"name": "ImportationNr",
						"type": "char"
					},
					{
						"name": "RevaluationCurrency",
						"type": "char"
					},
					{
						"name": "LineType",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "ExternalNumber",
						"type": "varchar"
					},
					{
						"name": "ExternalNumberRecordID",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "RevaluationRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "PositionNumber",
						"type": "varchar"
					},
					{
						"name": "StatementDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "StatementNumber",
						"type": "char"
					},
					{
						"name": "IntrastatEnabled",
						"type": "bit"
					},
					{
						"name": "AllocationType",
						"type": "char"
					},
					{
						"name": "OfficialExchangeRate",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OfficialAmountDC",
						"type": "float",
						"precision": 15
					},
					{
						"name": "OfficialBasisDC",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ScheduledResources",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ManualStartLock",
						"type": "bit"
					},
					{
						"name": "ManualStopLock",
						"type": "bit"
					},
					{
						"name": "FirmZoneLock",
						"type": "bit"
					},
					{
						"name": "Division",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "OperationQuantityComplete",
						"type": "float",
						"precision": 15
					},
					{
						"name": "TaxDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "gbkmut"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_Exact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Exact_grtbk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Kostensoorten",
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_Exact",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Exact"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "reknr",
						"type": "char"
					},
					{
						"name": "oms25_0",
						"type": "varchar"
					},
					{
						"name": "oms25_1",
						"type": "varchar"
					},
					{
						"name": "oms25_2",
						"type": "varchar"
					},
					{
						"name": "oms25_3",
						"type": "varchar"
					},
					{
						"name": "oms25_4",
						"type": "varchar"
					},
					{
						"name": "bal_vw",
						"type": "char"
					},
					{
						"name": "debcrd",
						"type": "char"
					},
					{
						"name": "subtotrek",
						"type": "char"
					},
					{
						"name": "gbktext",
						"type": "int",
						"precision": 10
					},
					{
						"name": "btw_code",
						"type": "char"
					},
					{
						"name": "projectrek",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "kstplrek",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "kstdrrek",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "aantallen",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "omzrek",
						"type": "char"
					},
					{
						"name": "type_rek",
						"type": "char"
					},
					{
						"name": "mineraal",
						"type": "char"
					},
					{
						"name": "blokkeer",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "herwaard",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "verdicht",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "blznr",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "perc_naf",
						"type": "float",
						"precision": 15
					},
					{
						"name": "reknr_naf",
						"type": "char"
					},
					{
						"name": "perc_prive",
						"type": "float",
						"precision": 15
					},
					{
						"name": "reknr_priv",
						"type": "char"
					},
					{
						"name": "bkjrcode",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "bkjr_mut",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "afletteren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "aflet_mut",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "act_rek",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "type_com",
						"type": "char"
					},
					{
						"name": "std_kstpl",
						"type": "char"
					},
					{
						"name": "std_kstdr",
						"type": "char"
					},
					{
						"name": "aandacht",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "wisselrek",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "type_rek2",
						"type": "char"
					},
					{
						"name": "wijz_reg",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "reknr_l",
						"type": "char"
					},
					{
						"name": "prnbifunc",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "afsreknr",
						"type": "char"
					},
					{
						"name": "scheme_type",
						"type": "char"
					},
					{
						"name": "analyt_acc",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "reknr_2",
						"type": "char"
					},
					{
						"name": "freefield1",
						"type": "char"
					},
					{
						"name": "freefield2",
						"type": "char"
					},
					{
						"name": "freefield3",
						"type": "char"
					},
					{
						"name": "freefield4",
						"type": "char"
					},
					{
						"name": "freefield5",
						"type": "char"
					},
					{
						"name": "freefield6",
						"type": "char"
					},
					{
						"name": "freefield7",
						"type": "char"
					},
					{
						"name": "freefield8",
						"type": "char"
					},
					{
						"name": "freefield9",
						"type": "char"
					},
					{
						"name": "freefield10",
						"type": "char"
					},
					{
						"name": "freefield11",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield12",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield13",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield14",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield15",
						"type": "float",
						"precision": 15
					},
					{
						"name": "freefield16",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield17",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield18",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield19",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "freefield20",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "statusdate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "centr_account",
						"type": "char"
					},
					{
						"name": "IntBalanceDebit",
						"type": "char"
					},
					{
						"name": "subclass_pass",
						"type": "char"
					},
					{
						"name": "OffBalSubClassCredit",
						"type": "char"
					},
					{
						"name": "IsPersonalAccount",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "TypeAdjustmentInflation",
						"type": "char"
					},
					{
						"name": "DocumentID",
						"type": "uniqueidentifier"
					},
					{
						"name": "alternativeledger",
						"type": "char"
					},
					{
						"name": "UseResource",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UseProject",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UseItem",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UseDebtor",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UseCreditor",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UseIntercompany",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "CompanyCode",
						"type": "char"
					},
					{
						"name": "AccountCode",
						"type": "char"
					},
					{
						"name": "AccountReportCategory",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AccountConversionType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Class_01",
						"type": "varchar"
					},
					{
						"name": "Class_02",
						"type": "varchar"
					},
					{
						"name": "Class_03",
						"type": "varchar"
					},
					{
						"name": "Class_04",
						"type": "varchar"
					},
					{
						"name": "Class_05",
						"type": "varchar"
					},
					{
						"name": "Class_06",
						"type": "varchar"
					},
					{
						"name": "Class_07",
						"type": "varchar"
					},
					{
						"name": "Class_08",
						"type": "varchar"
					},
					{
						"name": "Class_09",
						"type": "varchar"
					},
					{
						"name": "Class_10",
						"type": "varchar"
					},
					{
						"name": "Class_11",
						"type": "varchar"
					},
					{
						"name": "Class_12",
						"type": "varchar"
					},
					{
						"name": "UseIBActive",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "UseCostcenterAllocation",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AssociateGL",
						"type": "char"
					},
					{
						"name": "ShowNotes",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "ExcludeVATListing",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "Division",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "syscreated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "syscreator",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysmodified",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "sysmodifier",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sysguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "timestamp",
						"type": "timestamp"
					},
					{
						"name": "MSICCode",
						"type": "varchar"
					},
					{
						"name": "TaxonomyCode",
						"type": "varchar"
					},
					{
						"name": "TariffCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "grtbk"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_Exact')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Feit_Begroting')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Kostenplaats_key",
						"type": "nvarchar"
					},
					{
						"name": "Kostensoort_key",
						"type": "nvarchar"
					},
					{
						"name": "Periode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FTEBegroot",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "feit_begrotingid",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "feit_begroting"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Feit_Formatie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Medewerker_key",
						"type": "nvarchar"
					},
					{
						"name": "Herkomst_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Leeftijd_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Instroom",
						"type": "nvarchar"
					},
					{
						"name": "Uitstroom",
						"type": "nvarchar"
					},
					{
						"name": "Dienstjaar_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Periode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Begindatum_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Einddatum_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Kostenplaats_key",
						"type": "nvarchar"
					},
					{
						"name": "Kostensoort_key",
						"type": "nvarchar"
					},
					{
						"name": "Hoofdkostenplaats_key",
						"type": "nvarchar"
					},
					{
						"name": "CAO_key",
						"type": "nvarchar"
					},
					{
						"name": "Contracttype_key",
						"type": "nvarchar"
					},
					{
						"name": "Medewerkersoort_key",
						"type": "nvarchar"
					},
					{
						"name": "Functie_key",
						"type": "nvarchar"
					},
					{
						"name": "Dienstverbandbegin",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Dienstverbandeind",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "FTEVast",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTERealisatie",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEZwangerschapsverlof",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEOuderschapsverlof",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEGeboorteverlof",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEOnbetaaldverlof",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEMeeruren",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEOproepuren",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "FTEOveruren",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "feit_formatieid",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "feit_formatie"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Kostensoort_rapportage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Referentie"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Kostensoorten rapportage",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "referentie.xlsx",
						"folderPath": "tabel referentie",
						"fileSystem": "referentie"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Kostensoortcode min",
						"type": "String"
					},
					{
						"name": "Kostensoortcode max",
						"type": "String"
					},
					{
						"name": "Sort1",
						"type": "String"
					},
					{
						"name": "Verdichting1",
						"type": "String"
					},
					{
						"name": "Sort2",
						"type": "String"
					},
					{
						"name": "Verdichting2",
						"type": "String"
					},
					{
						"name": "Sort3",
						"type": "String"
					},
					{
						"name": "Verdichting3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Leeftijdsgroep')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Referentie"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Leeftijdsgroep",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "referentie.xlsx",
						"folderPath": "tabel referentie",
						"fileSystem": "referentie"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Leeftijd",
						"type": "String"
					},
					{
						"name": "LeeftijdsgroepVernet",
						"type": "String"
					},
					{
						"name": "LeeftijdsgroepPatient",
						"type": "String"
					},
					{
						"name": "Groep1",
						"type": "String"
					},
					{
						"name": "Groep2",
						"type": "String"
					},
					{
						"name": "Groep3",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Organisatie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Referentie"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Organisatie",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "referentie.xlsx",
						"folderPath": "tabel referentie",
						"fileSystem": "referentie"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "kostenplaats",
						"type": "String"
					},
					{
						"name": "N1",
						"type": "String"
					},
					{
						"name": "N2",
						"type": "String"
					},
					{
						"name": "regio",
						"type": "String"
					},
					{
						"name": "N3",
						"type": "String"
					},
					{
						"name": "N4",
						"type": "String"
					},
					{
						"name": "begin",
						"type": "String"
					},
					{
						"name": "einde",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Patient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_Hix",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/HIX"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "PATIENTNR",
						"type": "nvarchar"
					},
					{
						"name": "ACHTERNAAM",
						"type": "nvarchar"
					},
					{
						"name": "VOORVOEGA",
						"type": "nvarchar"
					},
					{
						"name": "MEISJESNAA",
						"type": "nvarchar"
					},
					{
						"name": "VOORVOEGM",
						"type": "nvarchar"
					},
					{
						"name": "VOORLETTER",
						"type": "nvarchar"
					},
					{
						"name": "ROEPNAAM",
						"type": "nvarchar"
					},
					{
						"name": "VOORNAAM",
						"type": "nvarchar"
					},
					{
						"name": "Pseudonym",
						"type": "nvarchar"
					},
					{
						"name": "PseudonymEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PronounCode",
						"type": "nvarchar"
					},
					{
						"name": "TITELS",
						"type": "nvarchar"
					},
					{
						"name": "GESLACHT",
						"type": "nvarchar"
					},
					{
						"name": "GEBDAT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "GEBOORTETIJD",
						"type": "nvarchar"
					},
					{
						"name": "GEBDATCOR",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "GEBPLAATS",
						"type": "nvarchar"
					},
					{
						"name": "GEBLAND",
						"type": "nvarchar"
					},
					{
						"name": "INSTANTIE",
						"type": "nvarchar"
					},
					{
						"name": "MERGED",
						"type": "bit"
					},
					{
						"name": "Blok",
						"type": "bit"
					},
					{
						"name": "BSN",
						"type": "nvarchar"
					},
					{
						"name": "HUISARTS",
						"type": "nvarchar"
					},
					{
						"name": "TANDARTS",
						"type": "nvarchar"
					},
					{
						"name": "APOTHEEK",
						"type": "nvarchar"
					},
					{
						"name": "VERZVORM",
						"type": "nvarchar"
					},
					{
						"name": "IDDATUM",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IDTYPE",
						"type": "nvarchar"
					},
					{
						"name": "IDNUMMER",
						"type": "nvarchar"
					},
					{
						"name": "WIDGELIJK",
						"type": "bit"
					},
					{
						"name": "WIDDATUM",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "BSNDATUM",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EXTYPE",
						"type": "nvarchar"
					},
					{
						"name": "EXDATE",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "VERBLADRCODE",
						"type": "nvarchar"
					},
					{
						"name": "GEBDATRES",
						"type": "nvarchar"
					},
					{
						"name": "HOOFDVERZ",
						"type": "nvarchar"
					},
					{
						"name": "INGANGSDAT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "REKENINGNR",
						"type": "nvarchar"
					},
					{
						"name": "DEBITEURNR",
						"type": "nvarchar"
					},
					{
						"name": "BICCODE",
						"type": "nvarchar"
					},
					{
						"name": "PATTYPE",
						"type": "nvarchar"
					},
					{
						"name": "PATCODES",
						"type": "nvarchar"
					},
					{
						"name": "UITGDATUM",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "OVERLEDEN",
						"type": "bit"
					},
					{
						"name": "OVERLDAT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "OVERLTIJD",
						"type": "nvarchar"
					},
					{
						"name": "MEERLING",
						"type": "bit"
					},
					{
						"name": "EENLING",
						"type": "bit"
					},
					{
						"name": "MEMO",
						"type": "nvarchar"
					},
					{
						"name": "BEREIKBAARHEID",
						"type": "nvarchar"
					},
					{
						"name": "BURGSTAAT",
						"type": "nvarchar"
					},
					{
						"name": "TAAL",
						"type": "nvarchar"
					},
					{
						"name": "RELIGIE",
						"type": "nvarchar"
					},
					{
						"name": "GEESTVERZ",
						"type": "nvarchar"
					},
					{
						"name": "PONSDAT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "PONSAANT",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TMPREG",
						"type": "bit"
					},
					{
						"name": "MUTDAT",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MUTTIJD",
						"type": "nvarchar"
					},
					{
						"name": "MUTWIE",
						"type": "nvarchar"
					},
					{
						"name": "USERCODE",
						"type": "nvarchar"
					},
					{
						"name": "MUTBRON",
						"type": "nvarchar"
					},
					{
						"name": "KOPPELNR",
						"type": "nvarchar"
					},
					{
						"name": "KOPPELSTAT",
						"type": "nvarchar"
					},
					{
						"name": "ADRES",
						"type": "nvarchar"
					},
					{
						"name": "HUISNR",
						"type": "nvarchar"
					},
					{
						"name": "POSTCODE",
						"type": "nvarchar"
					},
					{
						"name": "WOONPLAATS",
						"type": "nvarchar"
					},
					{
						"name": "LAND",
						"type": "nvarchar"
					},
					{
						"name": "PARTVERZ",
						"type": "nvarchar"
					},
					{
						"name": "AANVVERZ",
						"type": "nvarchar"
					},
					{
						"name": "NRZIEKENFO",
						"type": "nvarchar"
					},
					{
						"name": "NRPARTVERZ",
						"type": "nvarchar"
					},
					{
						"name": "NRAANVVERZ",
						"type": "nvarchar"
					},
					{
						"name": "KLASSEZIEK",
						"type": "nvarchar"
					},
					{
						"name": "KLASSEPART",
						"type": "nvarchar"
					},
					{
						"name": "KLASSEAANV",
						"type": "nvarchar"
					},
					{
						"name": "ZIEKENFOND",
						"type": "nvarchar"
					},
					{
						"name": "NAAMGEBR",
						"type": "nvarchar"
					},
					{
						"name": "SNTYPE",
						"type": "nvarchar"
					},
					{
						"name": "ExclWeb",
						"type": "bit"
					},
					{
						"name": "IsTestPatient",
						"type": "bit"
					},
					{
						"name": "GEBLANDV",
						"type": "nvarchar"
					},
					{
						"name": "GEBLANDM",
						"type": "nvarchar"
					},
					{
						"name": "INGEZETENE",
						"type": "nvarchar"
					},
					{
						"name": "AFWIJKENDEFOTO",
						"type": "nvarchar"
					},
					{
						"name": "HEEFTAFWIJKFOTO",
						"type": "bit"
					},
					{
						"name": "TELEFOON1",
						"type": "nvarchar"
					},
					{
						"name": "TYPETEL1",
						"type": "nvarchar"
					},
					{
						"name": "TELEFOON2",
						"type": "nvarchar"
					},
					{
						"name": "TYPETEL2",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "PATIENT_PATIENT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_Hix')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_CAO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CAO_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CAOcode",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CAOomschrijving",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_CAO"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_Functie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Functie_key",
						"type": "nvarchar"
					},
					{
						"name": "Functiecode",
						"type": "nvarchar"
					},
					{
						"name": "Functieomschrijving",
						"type": "nvarchar"
					},
					{
						"name": "Kostensoortcode",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_functie"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_Medewerker')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Medewerker_key",
						"type": "nvarchar"
					},
					{
						"name": "Medewerkernaam",
						"type": "nvarchar"
					},
					{
						"name": "Geslacht",
						"type": "nvarchar"
					},
					{
						"name": "Geboortedatum",
						"type": "date"
					},
					{
						"name": "Personeelsnummer",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_medewerker"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_Medewerkersoort')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Medewerkersoort_key",
						"type": "nvarchar"
					},
					{
						"name": "Medewerkersoortcode",
						"type": "nvarchar"
					},
					{
						"name": "Medewerkersoortomschrijving",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_medewerkersoort"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_contracttype')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Personeel"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Contracttype_key",
						"type": "nvarchar"
					},
					{
						"name": "Contracttypecode",
						"type": "nvarchar"
					},
					{
						"name": "Contracttypeomschrijving",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_contracttype"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_dienstjaren')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Referentie"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Dienstjaar_key",
						"type": "nvarchar"
					},
					{
						"name": "Jaar",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Maand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Groep1",
						"type": "nvarchar"
					},
					{
						"name": "Groep2",
						"type": "nvarchar"
					},
					{
						"name": "Groep3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_dienstjaar"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Per_leeftijdsgroep')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Referentie"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Leeftijdsgroep_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Leeftijd",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LeeftijdsgroepVernet",
						"type": "nvarchar"
					},
					{
						"name": "LeeftijdsgroepPatient",
						"type": "nvarchar"
					},
					{
						"name": "Groep1",
						"type": "nvarchar"
					},
					{
						"name": "Groep2",
						"type": "nvarchar"
					},
					{
						"name": "Groep3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ref",
					"table": "dim_leeftijdsgroep"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Postcode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Referentie"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Postcode",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "referentie.xlsx",
						"folderPath": "tabel referentie",
						"fileSystem": "referentie"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "PostcodeNummers",
						"type": "String"
					},
					{
						"name": "Plaats",
						"type": "String"
					},
					{
						"name": "Gemeente",
						"type": "String"
					},
					{
						"name": "Provincie",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Datum')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Referentie"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Datum_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Datum",
						"type": "date"
					},
					{
						"name": "DatumVoluit",
						"type": "nvarchar"
					},
					{
						"name": "DagInMaand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DagInWeek",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Dagnaam",
						"type": "nvarchar"
					},
					{
						"name": "Maandnaam",
						"type": "nvarchar"
					},
					{
						"name": "MaandnaamKort",
						"type": "nvarchar"
					},
					{
						"name": "Maandnummer",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Jaar",
						"type": "int",
						"precision": 10
					},
					{
						"name": "JaarMaand",
						"type": "nvarchar"
					},
					{
						"name": "JaarWeek",
						"type": "nvarchar"
					},
					{
						"name": "IsWerkdag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsWeekeind",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsFeestdag",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "per",
					"table": "dim_datum"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Kostenplaats')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Referentie"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Kostenplaats_key",
						"type": "nvarchar"
					},
					{
						"name": "Kostenplaatscode",
						"type": "nvarchar"
					},
					{
						"name": "Kostenplaatsomschrijving",
						"type": "nvarchar"
					},
					{
						"name": "Begindatum",
						"type": "date"
					},
					{
						"name": "Einddatum",
						"type": "date"
					},
					{
						"name": "Niveau1",
						"type": "nvarchar"
					},
					{
						"name": "Niveau2",
						"type": "nvarchar"
					},
					{
						"name": "Regio",
						"type": "nvarchar"
					},
					{
						"name": "Niveau3",
						"type": "nvarchar"
					},
					{
						"name": "Niveau4",
						"type": "nvarchar"
					},
					{
						"name": "Locatie",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ref",
					"table": "dim_kostenplaats"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Kostensoort')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Referentie"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "ref",
					"table": "dim_kostensoort"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ref_Postcode')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SQLServer_az_bi",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "3_Datamarts/Referentie"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Postcode_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Postcode4",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Woonplaats",
						"type": "nvarchar"
					},
					{
						"name": "Regio",
						"type": "nvarchar"
					},
					{
						"name": "Gemeente",
						"type": "nvarchar"
					},
					{
						"name": "Provincie",
						"type": "nvarchar"
					},
					{
						"name": "Verzorgingsgebied",
						"type": "nvarchar"
					},
					{
						"name": "Groep1",
						"type": "nvarchar"
					},
					{
						"name": "Groep2",
						"type": "nvarchar"
					},
					{
						"name": "Groep3",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "ref",
					"table": "dim_postcode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SQLServer_az_bi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_AFAS_Kostensoort_functie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2_Staging/AFAS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "kostensoortfunctie",
						"folderPath": "dim",
						"fileSystem": "personeel"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_AFAS_Looncomponenten')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2_Staging/AFAS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "looncomponenten",
						"folderPath": "dim",
						"fileSystem": "personeel"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_AFAS_Loonverdeling')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2_Staging/AFAS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "loonverdeling",
						"folderPath": "feit",
						"fileSystem": "personeel"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_AFAS_Medewerker')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2_Staging/AFAS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "medewerker",
						"folderPath": "dim",
						"fileSystem": "personeel"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_AFAS_Verzuim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2_Staging/AFAS"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "verzuim",
						"folderPath": "feit",
						"fileSystem": "personeel"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/STG_Exact_Grtbk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "2_Staging/Exact"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "exact"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cszislib_arts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/HIX"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "hix"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cszislib_arts_specialisme')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/HIX"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "hix"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cszislib_arts_type')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/HIX"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "hix"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cszislib_patient')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/HIX"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "hix"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/formatiebegroting')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Datalake2",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "1_Bronnen/Referentie"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Formatiebegroting",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "referentie.xlsx",
						"folderPath": "tabel referentie",
						"fileSystem": "referentie"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "kostenplaats",
						"type": "String"
					},
					{
						"name": "kostensoort",
						"type": "String"
					},
					{
						"name": "FTE begroot",
						"type": "String"
					},
					{
						"name": "begin",
						"type": "String"
					},
					{
						"name": "eind",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Datalake2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BlobStorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer_Afas')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer_Afas_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Authorization": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Datalake2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Datalake2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Datalake2_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SQLServer_Exact')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_SQLServer_Exact_connectionString')]",
					"userName": "[parameters('ls_SQLServer_Exact_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_SQLServer_Exact_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SQL-Klimmendaal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SQL-Klimmendaal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SQLServer_Hix')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_SQLServer_Hix_connectionString')]",
					"userName": "[parameters('ls_SQLServer_Hix_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_SQLServer_Hix_password')]"
					}
				},
				"connectVia": {
					"referenceName": "IR-SQL-Klimmendaal",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/IR-SQL-Klimmendaal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SQLServer_az_bi')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_SQLServer_az_bi_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-SQL-Klimmendaal')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLExact')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_dim_cao')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_AFAS_Loonverdeling",
								"type": "DatasetReference"
							},
							"name": "CAO"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_CAO",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tskip as long,\n\t\ttake as long,\n\t\tMedewerker as string,\n\t\tDV_nr as long,\n\t\tDV_Begin as string,\n\t\tDV_Eind as string,\n\t\tVlgnr_contract as long,\n\t\tContr_Begin as string,\n\t\tContr_Eind as string,\n\t\tType_contract_code as string,\n\t\tType_contract as string,\n\t\tSoort_medewerker_code as string,\n\t\tSoort_Medewerker as string,\n\t\tDienstbetrekking_code as string,\n\t\tDienstbetrekking as string,\n\t\tFunctie_Begin as string,\n\t\tFunctie_Eind as string,\n\t\tHoofdkostenplaats as string,\n\t\tFormatie_Begin as string,\n\t\tFormatie_Eind as string,\n\t\tParttimePerc as double,\n\t\tUren_week as double,\n\t\tDagen_week as double,\n\t\tKostenplaats as string,\n\t\tOE as string,\n\t\tLoonv_perc as double,\n\t\tFunctie_code as string,\n\t\tFunctie_omschr as string,\n\t\tWerkgever_code as string,\n\t\tWerkgever_naam as string,\n\t\tSalaris_begin as string,\n\t\tSalaris_eind as string,\n\t\tCao_code_regeling as string,\n\t\tCAO_omschrijving as string,\n\t\tHoofd_Functie_code as string,\n\t\tHoofd_Functie_Omschr as string,\n\t\tArbeidsvoorwaarde_code as string,\n\t\tBegindatum_contractketen as string,\n\t\tBegindatum_organigram as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> CAO\nCAO select(mapColumn(\n\t\tCao_code_regeling,\n\t\tCAO_omschrijving\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(Cao_code_regeling,\n\t\tCAO_omschrijving),\n\tcolumn1 = count(Cao_code_regeling)) ~> Aggregate1\nAggregate1 derive(CAO_key = Cao_code_regeling) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tCAO_key as integer,\n\t\tCAOcode as integer,\n\t\tCAOomschrijving as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tCAO_key,\n\t\tCAOcode = Cao_code_regeling,\n\t\tCAOomschrijving = CAO_omschrijving\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Loonverdeling')]",
				"[concat(variables('factoryId'), '/datasets/Per_CAO')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_dim_contract')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_AFAS_Loonverdeling",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_contracttype",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tskip as long,\n\t\ttake as long,\n\t\tMedewerker as string,\n\t\tDV_nr as long,\n\t\tDV_Begin as string,\n\t\tDV_Eind as string,\n\t\tVlgnr_contract as long,\n\t\tContr_Begin as string,\n\t\tContr_Eind as string,\n\t\tType_contract_code as string,\n\t\tType_contract as string,\n\t\tSoort_medewerker_code as string,\n\t\tSoort_Medewerker as string,\n\t\tDienstbetrekking_code as string,\n\t\tDienstbetrekking as string,\n\t\tFunctie_Begin as string,\n\t\tFunctie_Eind as string,\n\t\tHoofdkostenplaats as string,\n\t\tFormatie_Begin as string,\n\t\tFormatie_Eind as string,\n\t\tParttimePerc as double,\n\t\tUren_week as double,\n\t\tDagen_week as double,\n\t\tKostenplaats as string,\n\t\tOE as string,\n\t\tLoonv_perc as double,\n\t\tFunctie_code as string,\n\t\tFunctie_omschr as string,\n\t\tWerkgever_code as string,\n\t\tWerkgever_naam as string,\n\t\tSalaris_begin as string,\n\t\tSalaris_eind as string,\n\t\tCao_code_regeling as string,\n\t\tCAO_omschrijving as string,\n\t\tHoofd_Functie_code as string,\n\t\tHoofd_Functie_Omschr as string,\n\t\tArbeidsvoorwaarde_code as string,\n\t\tBegindatum_contractketen as string,\n\t\tBegindatum_organigram as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> source1\nsource1 select(mapColumn(\n\t\tType_contract_code,\n\t\tType_contract\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(Type_contract_code,\n\t\tType_contract),\n\tColumntotal = count(Type_contract_code)) ~> Aggregate1\nAggregate1 derive(Type_contract_key = Type_contract_code) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tContracttype_key as string,\n\t\tContracttypecode as string,\n\t\tContracttypeomschrijving as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tContracttype_key = Type_contract_key,\n\t\tContracttypecode = Type_contract_code,\n\t\tContracttypeomschrijving = Type_contract\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Loonverdeling')]",
				"[concat(variables('factoryId'), '/datasets/Per_contracttype')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_dim_functie')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_AFAS_Kostensoort_functie",
								"type": "DatasetReference"
							},
							"name": "AfasKostensoort"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_Functie",
								"type": "DatasetReference"
							},
							"name": "DimFunctie"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tskip as long,\n\t\ttake as long,\n\t\tSpecifieke_bron_code as string,\n\t\tSpecifieke_bron_omschrijving as string,\n\t\tVaste_waarde as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dim/kostensoortfunctie']) ~> AfasKostensoort\nAfasKostensoort sink(input(\n\t\tFunctie_key as string,\n\t\tFunctiecode as string,\n\t\tFunctieomschrijving as string,\n\t\tKostensoortcode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tFunctie_key = Specifieke_bron_code,\n\t\tFunctiecode = Specifieke_bron_code,\n\t\tFunctieomschrijving = Specifieke_bron_omschrijving,\n\t\tKostensoortcode = Vaste_waarde\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DimFunctie"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Kostensoort_functie')]",
				"[concat(variables('factoryId'), '/datasets/Per_Functie')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_dim_medewerker')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_AFAS_Medewerker",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_Medewerker",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tMedewerker as string,\n\t\tRoepnaam as string,\n\t\tVoornaam as string,\n\t\tVoorletters as string,\n\t\tVoorvoegsel as string,\n\t\tAchternaam as string,\n\t\tVoorv_geb_naam as string,\n\t\tGeboortenaam as string,\n\t\tVoorvoegsel_partner as string,\n\t\tGeb_naam_partner as string,\n\t\tNaamgebruik_code as string,\n\t\tNaamgebruik as string,\n\t\tGeslacht_code as string,\n\t\tGeslacht as string,\n\t\tNationaliteit_code as string,\n\t\tNationaliteit as string,\n\t\tGeboortedatum as timestamp,\n\t\tGeboorteland as string,\n\t\tGeboorteplaats as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dim/medewerker']) ~> source1\nsource1 derive(Medewerker_key = Medewerker) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tMedewerker_key as string,\n\t\tMedewerkernaam as string,\n\t\tGeslacht as string,\n\t\tGeboortedatum as date,\n\t\tPersoneelsnummer as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tMedewerker_key,\n\t\tMedewerkernaam = Achternaam,\n\t\tGeslacht,\n\t\tGeboortedatum,\n\t\tPersoneelsnummer = Medewerker\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Medewerker')]",
				"[concat(variables('factoryId'), '/datasets/Per_Medewerker')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_dim_medewerkersoort')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_AFAS_Loonverdeling",
								"type": "DatasetReference"
							},
							"name": "loonverdeling"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_Medewerkersoort",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "selecteerkolommen"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tskip as long,\n\t\ttake as long,\n\t\tMedewerker as string,\n\t\tDV_nr as long,\n\t\tDV_Begin as string,\n\t\tDV_Eind as string,\n\t\tVlgnr_contract as long,\n\t\tContr_Begin as string,\n\t\tContr_Eind as string,\n\t\tType_contract_code as string,\n\t\tType_contract as string,\n\t\tSoort_medewerker_code as string,\n\t\tSoort_Medewerker as string,\n\t\tDienstbetrekking_code as string,\n\t\tDienstbetrekking as string,\n\t\tFunctie_Begin as string,\n\t\tFunctie_Eind as string,\n\t\tHoofdkostenplaats as string,\n\t\tFormatie_Begin as string,\n\t\tFormatie_Eind as string,\n\t\tParttimePerc as double,\n\t\tUren_week as double,\n\t\tDagen_week as double,\n\t\tKostenplaats as string,\n\t\tOE as string,\n\t\tLoonv_perc as double,\n\t\tFunctie_code as string,\n\t\tFunctie_omschr as string,\n\t\tWerkgever_code as string,\n\t\tWerkgever_naam as string,\n\t\tSalaris_begin as string,\n\t\tSalaris_eind as string,\n\t\tCao_code_regeling as string,\n\t\tCAO_omschrijving as string,\n\t\tHoofd_Functie_code as string,\n\t\tHoofd_Functie_Omschr as string,\n\t\tArbeidsvoorwaarde_code as string,\n\t\tBegindatum_contractketen as string,\n\t\tBegindatum_organigram as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> loonverdeling\nloonverdeling select(mapColumn(\n\t\tSoort_medewerker_code,\n\t\tSoort_Medewerker\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selecteerkolommen\nselecteerkolommen aggregate(groupBy(Soort_medewerker_code,\n\t\tSoort_Medewerker),\n\taantal = count(Soort_medewerker_code)) ~> Aggregate1\nAggregate1 derive(soort_medeweker_code_key = Soort_medewerker_code) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tMedewerkersoort_key as string,\n\t\tMedewerkersoortcode as string,\n\t\tMedewerkersoortomschrijving as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tMedewerkersoort_key = soort_medeweker_code_key,\n\t\tMedewerkersoortcode = Soort_medewerker_code,\n\t\tMedewerkersoortomschrijving = Soort_Medewerker\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Loonverdeling')]",
				"[concat(variables('factoryId'), '/datasets/Per_Medewerkersoort')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_feit_begroting')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "formatiebegroting",
								"type": "DatasetReference"
							},
							"name": "Formatiebegroting"
						},
						{
							"dataset": {
								"referenceName": "Ref_Datum",
								"type": "DatasetReference"
							},
							"name": "maanden"
						},
						{
							"dataset": {
								"referenceName": "Ref_Kostenplaats",
								"type": "DatasetReference"
							},
							"name": "RefKostenplaats"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Feit_Begroting",
								"type": "DatasetReference"
							},
							"name": "DMFeitBegroting"
						}
					],
					"transformations": [
						{
							"name": "AGGMaanden"
						},
						{
							"name": "MaandSplit"
						},
						{
							"name": "DCVelden"
						},
						{
							"name": "Kostenplaats"
						}
					],
					"script": "source(output(\n\t\tkostenplaats as string,\n\t\tkostensoort as string,\n\t\t{FTE begroot} as string,\n\t\tbegin as date,\n\t\teind as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['tabel referentie/referentie.xlsx']) ~> Formatiebegroting\nsource(output(\n\t\tDatum_key as integer,\n\t\tDatum as date,\n\t\tDatumVoluit as string,\n\t\tDagInMaand as integer,\n\t\tDagInWeek as integer,\n\t\tDagnaam as string,\n\t\tMaandnaam as string,\n\t\tMaandnaamKort as string,\n\t\tMaandnummer as integer,\n\t\tJaar as integer,\n\t\tJaarMaand as string,\n\t\tJaarWeek as string,\n\t\tIsWerkdag as integer,\n\t\tIsWeekeind as integer,\n\t\tIsFeestdag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> maanden\nsource(output(\n\t\tKostenplaats_key as string,\n\t\tKostenplaatscode as string,\n\t\tKostenplaatsomschrijving as string,\n\t\tBegindatum as date,\n\t\tEinddatum as date,\n\t\tNiveau1 as string,\n\t\tNiveau2 as string,\n\t\tRegio as string,\n\t\tNiveau3 as string,\n\t\tNiveau4 as string,\n\t\tLocatie as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RefKostenplaats\nmaanden aggregate(groupBy(Jaar,\n\t\tMaandnummer),\n\tmin_datum = min(Datum),\n\t\tmax_datum = max(Datum),\n\t\tDatum_key = min(Datum_key)) ~> AGGMaanden\nFormatiebegroting, AGGMaanden join(begin <= max_datum\n\t&& eind >= min_datum,\n\tjoinType:'inner',\n\tbroadcast: 'both')~> MaandSplit\nMaandSplit derive(Kostensoort_key = kostensoort,\n\t\tFTEBegroot = toDecimal({FTE begroot},18,3)) ~> DCVelden\nDCVelden, RefKostenplaats join(min_datum <= Einddatum\n\t&& min_datum >= Begindatum\n\t&& kostenplaats == Kostenplaatscode,\n\tjoinType:'left',\n\tbroadcast: 'both')~> Kostenplaats\nKostenplaats sink(input(\n\t\tKostenplaats_key as string,\n\t\tKostensoort_key as string,\n\t\tPeriode_key as integer,\n\t\tFTEBegroot as decimal(18,2),\n\t\tfeit_begrotingid as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tKostenplaats_key,\n\t\tKostensoort_key,\n\t\tPeriode_key = Datum_key,\n\t\tFTEBegroot\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DMFeitBegroting"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/formatiebegroting')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Datum')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Kostenplaats')]",
				"[concat(variables('factoryId'), '/datasets/Feit_Begroting')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_personeel_feit_formatie')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Personeel"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_AFAS_Loonverdeling",
								"type": "DatasetReference"
							},
							"name": "STGAFASLoonverdeling"
						},
						{
							"dataset": {
								"referenceName": "Ref_Datum",
								"type": "DatasetReference"
							},
							"name": "RefDatum"
						},
						{
							"dataset": {
								"referenceName": "STG_AFAS_Medewerker",
								"type": "DatasetReference"
							},
							"name": "PerMedewerker"
						},
						{
							"dataset": {
								"referenceName": "Ref_Kostenplaats",
								"type": "DatasetReference"
							},
							"name": "RefKostenplaats"
						},
						{
							"dataset": {
								"referenceName": "STG_AFAS_Verzuim",
								"type": "DatasetReference"
							},
							"name": "Verzuim"
						},
						{
							"dataset": {
								"referenceName": "STG_AFAS_Verzuim",
								"type": "DatasetReference"
							},
							"name": "VerzuimVolgenderegel"
						},
						{
							"dataset": {
								"referenceName": "STG_AFAS_Looncomponenten",
								"type": "DatasetReference"
							},
							"name": "Looncomponenten"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Feit_Formatie",
								"type": "DatasetReference"
							},
							"name": "Formatie"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ExpandRegels"
						},
						{
							"name": "AGGMaanden"
						},
						{
							"name": "DCDatums"
						},
						{
							"name": "DCPeriodekey"
						},
						{
							"name": "DCMeetwaarden"
						},
						{
							"name": "DCNulls"
						},
						{
							"name": "Filter1"
						},
						{
							"name": "DCBerekeningKey"
						},
						{
							"name": "LookupMedewerker"
						},
						{
							"name": "JoinKostenplaats"
						},
						{
							"name": "VerzuimInclEinddatum"
						},
						{
							"name": "VerzuimsetInclEinddatum"
						},
						{
							"name": "VerzuimSubset"
						},
						{
							"name": "VerzuimMaandSplit"
						},
						{
							"name": "Select1"
						},
						{
							"name": "DCZiektedagen"
						},
						{
							"name": "DCNull"
						},
						{
							"name": "FilterOpBegindatum"
						},
						{
							"name": "DCMeetwaardenFTE"
						},
						{
							"name": "AGGMeetwaarden"
						},
						{
							"name": "JoinVerzuimFTE"
						},
						{
							"name": "DCFTEVerzuimMW"
						}
					],
					"script": "source(output(\n\t\tskip as long,\n\t\ttake as long,\n\t\tMedewerker as string,\n\t\tDV_nr as long,\n\t\tDV_Begin as string,\n\t\tDV_Eind as string,\n\t\tVlgnr_contract as long,\n\t\tContr_Begin as string,\n\t\tContr_Eind as string,\n\t\tType_contract_code as string,\n\t\tType_contract as string,\n\t\tSoort_medewerker_code as string,\n\t\tSoort_Medewerker as string,\n\t\tDienstbetrekking_code as string,\n\t\tDienstbetrekking as string,\n\t\tFunctie_Begin as string,\n\t\tFunctie_Eind as string,\n\t\tHoofdkostenplaats as string,\n\t\tFormatie_Begin as string,\n\t\tFormatie_Eind as string,\n\t\tParttimePerc as double,\n\t\tUren_week as double,\n\t\tDagen_week as double,\n\t\tKostenplaats as string,\n\t\tOE as string,\n\t\tLoonv_perc as double,\n\t\tFunctie_code as string,\n\t\tFunctie_omschr as string,\n\t\tWerkgever_code as string,\n\t\tWerkgever_naam as string,\n\t\tSalaris_begin as string,\n\t\tSalaris_eind as string,\n\t\tCao_code_regeling as string,\n\t\tCAO_omschrijving as string,\n\t\tHoofd_Functie_code as string,\n\t\tHoofd_Functie_Omschr as string,\n\t\tArbeidsvoorwaarde_code as string,\n\t\tBegindatum_contractketen as string,\n\t\tBegindatum_organigram as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['feit/loonverdeling']) ~> STGAFASLoonverdeling\nsource(output(\n\t\tDatum_key as integer,\n\t\tDatum as date,\n\t\tDatumVoluit as string,\n\t\tDagInMaand as integer,\n\t\tDagInWeek as integer,\n\t\tDagnaam as string,\n\t\tMaandnaam as string,\n\t\tMaandnaamKort as string,\n\t\tMaandnummer as integer,\n\t\tJaar as integer,\n\t\tJaarMaand as string,\n\t\tJaarWeek as string,\n\t\tIsWerkdag as integer,\n\t\tIsWeekeind as integer,\n\t\tIsFeestdag as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RefDatum\nsource(output(\n\t\tMedewerker as string,\n\t\tRoepnaam as string,\n\t\tVoornaam as string,\n\t\tVoorletters as string,\n\t\tVoorvoegsel as string,\n\t\tAchternaam as string,\n\t\tGeboortenaam_apart_vastleggen as boolean,\n\t\tVoorv_geb_naam as string,\n\t\tGeboortenaam as string,\n\t\tVoorvoegsel_partner as string,\n\t\tGeb_naam_partner as string,\n\t\tNaamgebruik_code as string,\n\t\tNaamgebruik as string,\n\t\tGeslacht_code as string,\n\t\tGeslacht as string,\n\t\tNationaliteit_code as string,\n\t\tNationaliteit as string,\n\t\tGeboortedatum as string,\n\t\tGeboorteland as string,\n\t\tGeboorteplaats as string,\n\t\tBSN as string,\n\t\tBurgerlijke_staat_code as string,\n\t\tBurgerlijke_staat as string,\n\t\tHuwelijksdatum as string,\n\t\tDatum_scheiding as timestamp,\n\t\tOverlijdensdatum as timestamp,\n\t\tTelefoonnr_prive as string,\n\t\tMobiel_werk as string,\n\t\tMobiel_prive as string,\n\t\t{E-mail_prive} as string,\n\t\tAchternaam__init_voorvoegsel__roepnaam_ as string,\n\t\tStraat as string,\n\t\tHuisnummer as long,\n\t\tToev_aan_huisnr as string,\n\t\tPostcode as string,\n\t\tWoonplaats as string,\n\t\tLand as string,\n\t\tUPN as string,\n\t\t{E-mail_werk} as string,\n\t\tskip as long,\n\t\ttake as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dim/medewerker']) ~> PerMedewerker\nsource(output(\n\t\tKostenplaats_key as string,\n\t\tKostenplaatscode as string,\n\t\tKostenplaatsomschrijving as string,\n\t\tBegindatum as date,\n\t\tEinddatum as date,\n\t\tNiveau1 as string,\n\t\tNiveau2 as string,\n\t\tRegio as string,\n\t\tNiveau3 as string,\n\t\tNiveau4 as string,\n\t\tLocatie as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> RefKostenplaats\nsource(output(\n\t\tMedewerker as string,\n\t\tNaam as long,\n\t\tBegindatumVerzuimmelding as timestamp,\n\t\tVerzuimverloopDatum as timestamp,\n\t\tEinddatum_verzuim as timestamp,\n\t\tVerzuimsoortCode as string,\n\t\tVerzuimsoortOmschrijving as string,\n\t\tAanwezigheidsPercentage as double,\n\t\tAanwezigheidsPercentage_AT as double,\n\t\tDatum_uit_dienst as timestamp,\n\t\tSoort_Medewerker as string,\n\t\tReden_verzuim as string,\n\t\tVangnetregeling as boolean,\n\t\tBegindatum_doorlopend_verzuim as timestamp,\n\t\tDoorlopend_verzuim as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['feit/verzuim']) ~> Verzuim\nsource(output(\n\t\tMedewerker as string,\n\t\tNaam as long,\n\t\tBegindatumVerzuimmelding as timestamp,\n\t\tVerzuimverloopDatum as timestamp,\n\t\tEinddatum_verzuim as timestamp,\n\t\tVerzuimsoortCode as string,\n\t\tVerzuimsoortOmschrijving as string,\n\t\tAanwezigheidsPercentage as double,\n\t\tAanwezigheidsPercentage_AT as double,\n\t\tDatum_uit_dienst as timestamp,\n\t\tSoort_Medewerker as string,\n\t\tReden_verzuim as string,\n\t\tVangnetregeling as boolean,\n\t\tBegindatum_doorlopend_verzuim as timestamp,\n\t\tDoorlopend_verzuim as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['feit/verzuim']) ~> VerzuimVolgenderegel\nsource(output(\n\t\tskip as long,\n\t\ttake as long,\n\t\tFunctie as string,\n\t\tOrg_eenheid as string,\n\t\tMedewerker as string,\n\t\tDienstverband as long,\n\t\tKostenplaats as string,\n\t\tKostenplaats_sal as string,\n\t\tKostendrager as string,\n\t\tJaar as long,\n\t\tPeriode as long,\n\t\tCao_code as string,\n\t\tLooncomponent as long,\n\t\tOmschrijving_looncomponent as string,\n\t\tBedrag as double,\n\t\tWerkgever_code as string,\n\t\tEinddatum_contract as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dim/looncomponenten']) ~> Looncomponenten\nDCNulls, DCPeriodekey join(BegindatumSalaris <= max_datum\n\t&& EinddatumSalaris >= min_datum,\n\tjoinType:'left',\n\tbroadcast: 'both')~> ExpandRegels\nRefDatum aggregate(groupBy(Jaar,\n\t\tMaandnummer),\n\tmin_datum = min(Datum),\n\t\tmax_datum = max(Datum),\n\t\tdagen_in_maand = count(Datum_key)) ~> AGGMaanden\nFilter1 derive(BegindatumSalaris = toDate(left(Salaris_begin,10),'yyyy-MM-dd'),\n\t\tEinddatumSalaris = toDate(left(Salaris_eind,10),'yyyy-MM-dd'),\n\t\tBegindatum_key = toInteger(left(Salaris_begin,4) + substring(Salaris_begin,6,2) + substring(Salaris_begin,9,2)),\n\t\tEinddatum_key = toInteger(left(Salaris_eind,4) + substring(Salaris_eind,6,2) + substring(Salaris_eind,9,2)),\n\t\tDV_Begindatum = toDate(left(DV_Begin,10),'yyyy-MM-dd'),\n\t\tDV_Einddatum = toDate(left(DV_Eind,10),'yyyy-MM-dd')) ~> DCDatums\nAGGMaanden derive(Periode_key = (Jaar * 10000) + (Maandnummer * 100) + 1) ~> DCPeriodekey\nJoinKostenplaats derive(FTEVast = 1 * (ParttimePerc / 100.00) * (Loonv_perc / 100)) ~> DCMeetwaarden\nLookupMedewerker derive(EinddatumSalaris = iif(isNull(EinddatumSalaris), toDate('99991231','yyyyMMdd'),EinddatumSalaris)) ~> DCNulls\nSTGAFASLoonverdeling filter(1==1) ~> Filter1\nDCMeetwaarden derive(Dienstjaar_key = toString(toInteger(monthsBetween(min_datum, DV_Begindatum) / 12)) + '|' + toString(toInteger(monthsBetween(min_datum,DV_Begindatum)) % 12),\n\t\tLeeftijd_key = toInteger(monthsBetween(min_datum, toTimestamp(toDate(left(Geboortedatum,10),'yyyy-MM-dd'))) / 12),\n\t\tPostcode_key = left(Postcode,4),\n\t\tInstroom = iif((year(toTimestamp(DV_Begindatum))*100) + month(toTimestamp(DV_Begindatum)) == toInteger(Periode_key / 100), PerMedewerker@Medewerker, ''),\n\t\tUitstroom = iif((year(toTimestamp(DV_Einddatum))*100) + month(toTimestamp(DV_Einddatum)) == toInteger(Periode_key / 100), PerMedewerker@Medewerker, ''),\n\t\tmin_datum = min_datum) ~> DCBerekeningKey\nDCDatums, PerMedewerker join(STGAFASLoonverdeling@Medewerker == PerMedewerker@Medewerker,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> LookupMedewerker\nExpandRegels, RefKostenplaats join(Kostenplaats == Kostenplaatscode\n\t&& min_datum >= Begindatum\n\t&& min_datum <= Einddatum,\n\tjoinType:'left',\n\tbroadcast: 'both')~> JoinKostenplaats\nVerzuim, VerzuimSubset join(Medewerker == V_Medewerker\n\t&& BegindatumVerzuimmelding == V_BegindatumVerzuimmelding\n\t&& VerzuimverloopDatum < V_VerzuimverloopDatum,\n\tjoinType:'left',\n\tbroadcast: 'both')~> VerzuimInclEinddatum\nFilterOpBegindatum filter(Nr ==1) ~> VerzuimsetInclEinddatum\nVerzuimVolgenderegel select(mapColumn(\n\t\tV_Medewerker = Medewerker,\n\t\tV_BegindatumVerzuimmelding = BegindatumVerzuimmelding,\n\t\tV_VerzuimverloopDatum = VerzuimverloopDatum\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VerzuimSubset\nSelect1, DCPeriodekey join(VerzuimverloopBegindatum <= max_datum\n\t&& VerzuimverloopEinddatum >= min_datum,\n\tjoinType:'left',\n\tbroadcast: 'both')~> VerzuimMaandSplit\nDCNull select(mapColumn(\n\t\tMedewerker,\n\t\tNaam,\n\t\tBegindatumVerzuimmelding,\n\t\tVerzuimverloopBegindatum = VerzuimverloopDatum,\n\t\tVerzuimverloopEinddatum = V_VerzuimverloopDatum,\n\t\tEinddatum_verzuim,\n\t\tVerzuimsoortCode,\n\t\tVerzuimsoortOmschrijving,\n\t\tAanwezigheidsPercentage,\n\t\tAanwezigheidsPercentage_AT,\n\t\tDatum_uit_dienst,\n\t\tSoort_Medewerker,\n\t\tReden_verzuim,\n\t\tVangnetregeling,\n\t\tBegindatum_doorlopend_verzuim,\n\t\tDoorlopend_verzuim,\n\t\tNr\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nVerzuimMaandSplit derive(AantalDagen = (dayOfMonth(iif(VerzuimverloopEinddatum > max_datum, max_datum, VerzuimverloopEinddatum)) - dayOfMonth(iif(VerzuimverloopBegindatum < min_datum, min_datum, VerzuimverloopBegindatum))) + 1) ~> DCZiektedagen\nVerzuimsetInclEinddatum derive(V_VerzuimverloopDatum = iif(isNull(V_VerzuimverloopDatum), iif(isNull(Einddatum_verzuim),iif(currentDate() < toDate(BegindatumVerzuimmelding), toDate(BegindatumVerzuimmelding), currentDate()),toDate(Einddatum_verzuim)), toDate(V_VerzuimverloopDatum)),\n\t\tVerzuimverloopDatum = toDate(VerzuimverloopDatum)) ~> DCNull\nVerzuimInclEinddatum window(over(Medewerker,\n\t\tBegindatumVerzuimmelding,\n\t\tVerzuimverloopDatum),\n\tasc(V_VerzuimverloopDatum, false),\n\tNr = rowNumber()) ~> FilterOpBegindatum\nDCZiektedagen derive(DagenZwangerschapsverlof = iif(VerzuimsoortCode == \"ZW\", AantalDagen, 0),\n\t\tDagenZiek = iif(VerzuimsoortCode == \"Z\", AantalDagen, 0),\n\t\tDagenOverig = iif(VerzuimsoortCode != \"Z\", iif(VerzuimsoortCode != \"ZW\", AantalDagen, 0), 0)) ~> DCMeetwaardenFTE\nDCMeetwaardenFTE aggregate(groupBy(Medewerker,\n\t\tPeriode_key,\n\t\tVerzuimsoortCode,\n\t\tAanwezigheidsPercentage,\n\t\tAanwezigheidsPercentage_AT),\n\tAantalDagen = sum(AantalDagen),\n\t\tMaandPerc = sum(AantalDagen) / avg(dagen_in_maand),\n\t\tPercDagenZiek = sum(DagenZiek)  / avg(dagen_in_maand),\n\t\tPercDagenZwangerschapsverlof = sum(DagenZwangerschapsverlof)  / avg(dagen_in_maand),\n\t\tPercDagenOverig = sum(DagenOverig)  / avg(dagen_in_maand)) ~> AGGMeetwaarden\nDCBerekeningKey, AGGMeetwaarden join(PerMedewerker@Medewerker == AGGMeetwaarden@Medewerker\n\t&& DCPeriodekey@Periode_key == AGGMeetwaarden@Periode_key,\n\tjoinType:'left',\n\tbroadcast: 'both')~> JoinVerzuimFTE\nJoinVerzuimFTE derive(FTEZwanger = PercDagenZwangerschapsverlof * FTEVast) ~> DCFTEVerzuimMW\nDCFTEVerzuimMW sink(input(\n\t\tMedewerker_key as string,\n\t\tHerkomst_key as integer,\n\t\tLeeftijd_key as integer,\n\t\tInstroom as string,\n\t\tUitstroom as string,\n\t\tDienstjaar_key as integer,\n\t\tPeriode_key as integer,\n\t\tBegindatum_key as integer,\n\t\tEinddatum_key as integer,\n\t\tKostenplaats_key as string,\n\t\tKostensoort_key as string,\n\t\tHoofdkostenplaats_key as string,\n\t\tCAO_key as string,\n\t\tContracttype_key as string,\n\t\tMedewerkersoort_key as string,\n\t\tFunctie_key as string,\n\t\tDienstverbandbegin as timestamp,\n\t\tDienstverbandeind as timestamp,\n\t\tFTEVast as decimal(18,2),\n\t\tFTERealisatie as decimal(18,2),\n\t\tFTEZwangerschapsverlof as decimal(18,2),\n\t\tFTEOuderschapsverlof as decimal(18,2),\n\t\tFTEGeboorteverlof as decimal(18,2),\n\t\tFTEOnbetaaldverlof as decimal(18,2),\n\t\tFTEMeeruren as decimal(18,2),\n\t\tFTEOproepuren as decimal(18,2),\n\t\tFTEOveruren as decimal(18,2),\n\t\tfeit_formatieid as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tMedewerker_key = Medewerker,\n\t\tPeriode_key,\n\t\tCAO_key = Cao_code_regeling,\n\t\tBegindatum_key,\n\t\tEinddatum_key,\n\t\tContracttype_key = Type_contract_code,\n\t\tMedewerkersoort_key = Soort_medewerker_code,\n\t\tDienstverbandbegin = DV_Begin,\n\t\tDienstverbandeind = DV_Eind,\n\t\tFTEVast,\n\t\tFunctie_key = Functie_code,\n\t\tDienstjaar_key,\n\t\tInstroom,\n\t\tUitstroom,\n\t\tLeeftijd_key,\n\t\tHerkomst_key = Postcode_key,\n\t\tKostenplaats_key,\n\t\tFTEZwangerschapsverlof = FTEZwanger\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Formatie\nAGGMeetwaarden sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Loonverdeling')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Datum')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Medewerker')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Kostenplaats')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Verzuim')]",
				"[concat(variables('factoryId'), '/datasets/STG_AFAS_Looncomponenten')]",
				"[concat(variables('factoryId'), '/datasets/Feit_Formatie')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_referentie_dim_dienstjaren')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Referentie"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Dienstjaren",
								"type": "DatasetReference"
							},
							"name": "dienstjaren"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_dienstjaren",
								"type": "DatasetReference"
							},
							"name": "Refdienstjaren"
						}
					],
					"transformations": [
						{
							"name": "DCdienstjarenkey"
						}
					],
					"script": "source(output(\n\t\tjaar as integer '000',\n\t\tmaand as integer '000',\n\t\tgroep1 as string,\n\t\tgroep2 as string,\n\t\tgroep3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dienstjaren\ndienstjaren derive(Dienstjaar_key = concat(toString(jaar), '|',toString(maand))) ~> DCdienstjarenkey\nDCdienstjarenkey sink(input(\n\t\tDienstjaar_key as string,\n\t\tJaar as integer,\n\t\tMaand as integer,\n\t\tGroep1 as string,\n\t\tGroep2 as string,\n\t\tGroep3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tDienstjaar_key,\n\t\tJaar = jaar,\n\t\tMaand = maand,\n\t\tGroep1 = groep1,\n\t\tGroep2 = groep2,\n\t\tGroep3 = groep3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> Refdienstjaren"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dienstjaren')]",
				"[concat(variables('factoryId'), '/datasets/Per_dienstjaren')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_referentie_dim_kostenplaats')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Referentie"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Organisatie",
								"type": "DatasetReference"
							},
							"name": "ExcelOrganisatie"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ref_Kostenplaats",
								"type": "DatasetReference"
							},
							"name": "RefKostenplaats"
						}
					],
					"transformations": [
						{
							"name": "Kostenplaatskey"
						}
					],
					"script": "source(output(\n\t\tkostenplaats as string,\n\t\tN1 as string,\n\t\tN2 as string,\n\t\tregio as string,\n\t\tN3 as string,\n\t\tN4 as string,\n\t\tbegin as date,\n\t\teinde as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ExcelOrganisatie\nExcelOrganisatie derive(Kostenplaats_key = kostenplaats + '|' + toString((year(begin) * 10000) + (month(begin) * 100) + dayOfMonth(begin))) ~> Kostenplaatskey\nKostenplaatskey sink(input(\n\t\tKostenplaats_key as string,\n\t\tKostenplaatscode as string,\n\t\tKostenplaatsomschrijving as string,\n\t\tBegindatum as date,\n\t\tEinddatum as date,\n\t\tNiveau1 as string,\n\t\tNiveau2 as string,\n\t\tRegio as string,\n\t\tNiveau3 as string,\n\t\tNiveau4 as string,\n\t\tLocatie as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tRegio = regio,\n\t\tKostenplaats_key,\n\t\tKostenplaatscode = kostenplaats,\n\t\tKostenplaatsomschrijving = kostenplaats,\n\t\tNiveau1 = N1,\n\t\tNiveau2 = N2,\n\t\tRegio = regio,\n\t\tNiveau3 = N3,\n\t\tNiveau4 = N4,\n\t\tBegindatum = begin,\n\t\tEinddatum = einde\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> RefKostenplaats"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Organisatie')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Kostenplaats')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_referentie_dim_kostensoort')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Referentie"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "STG_Exact_Grtbk",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ref_Kostensoort",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\twildcardPaths:['dim/grtbk']) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/STG_Exact_Grtbk')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Kostensoort')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_referentie_dim_leeftijdsgroep')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Referentie"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Leeftijdsgroep",
								"type": "DatasetReference"
							},
							"name": "Leeftijdsgroep"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Per_leeftijdsgroep",
								"type": "DatasetReference"
							},
							"name": "dimleeftijdsgroep"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tLeeftijd as integer '000',\n\t\tLeeftijdsgroepVernet as string,\n\t\tLeeftijdsgroepPatient as string,\n\t\tGroep1 as string,\n\t\tGroep2 as string,\n\t\tGroep3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Leeftijdsgroep\nLeeftijdsgroep sink(input(\n\t\tLeeftijdsgroep_key as integer,\n\t\tLeeftijd as integer,\n\t\tLeeftijdsgroepVernet as string,\n\t\tLeeftijdsgroepPatient as string,\n\t\tGroep1 as string,\n\t\tGroep2 as string,\n\t\tGroep3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tLeeftijdsgroep_key = Leeftijd,\n\t\tLeeftijd,\n\t\tLeeftijdsgroepVernet,\n\t\tLeeftijdsgroepPatient,\n\t\tGroep1,\n\t\tGroep2,\n\t\tGroep3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> dimleeftijdsgroep"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Leeftijdsgroep')]",
				"[concat(variables('factoryId'), '/datasets/Per_leeftijdsgroep')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_vul_referentie_dim_postcode')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Referentie"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Postcode",
								"type": "DatasetReference"
							},
							"name": "excelpostcode"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ref_Postcode",
								"type": "DatasetReference"
							},
							"name": "RefPostcode"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tPostcodeNummers as string,\n\t\tPlaats as string,\n\t\tGemeente as string,\n\t\tProvincie as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> excelpostcode\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nexcelpostcode sink(input(\n\t\tPostcode_key as integer,\n\t\tPostcode4 as integer,\n\t\tWoonplaats as string,\n\t\tRegio as string,\n\t\tGemeente as string,\n\t\tProvincie as string,\n\t\tVerzorgingsgebied as string,\n\t\tGroep1 as string,\n\t\tGroep2 as string,\n\t\tGroep3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tPostcode_key = PostcodeNummers,\n\t\tPostcode4 = PostcodeNummers,\n\t\tWoonplaats = Plaats,\n\t\tGemeente,\n\t\tProvincie\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> RefPostcode"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Postcode')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/Ref_Postcode')]"
			]
		}
	]
}